(function(){window.mapfish={_scriptName:"MapFish.js",_getScriptLocation:function(){if(window.gMfLocation)return window.gMfLocation;for(var a="",b=mapfish._scriptName,c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var e=c[d].getAttribute("src");if(e){var f=e.lastIndexOf(b);if(-1<f&&f+b.length==e.length){a=e.slice(0,-b.length);break}}}return a}}})();OpenLayers.Util.extend(OpenLayers.Lang.fr,{scale:"Echelle = 1 : ${scaleDenom}","mf.tools":"Outils","mf.layertree":"Arbre des couches","mf.layertree.opacity":"Opacit\u00e9","mf.layertree.remove":"Supprimer","mf.layertree.zoomToExtent":"Zoom sur l'emprise","mf.print.mapTitle":"Titre","mf.print.comment":"Commentaires","mf.print.unableToPrint":"Impossible d'imprimer","mf.print.generatingPDF":"G\u00e9n\u00e9ration du PDF...","mf.print.dpi":"R\u00e9solution","mf.print.scale":"\u00c9chelle","mf.print.rotation":"Rotation",
"mf.print.print":"Imprimer","mf.print.resetPos":"R\u00e9init. pos.","mf.print.layout":"Format","mf.print.addPage":"Ajouter page","mf.print.remove":"Enlever page","mf.print.clearAll":"Supprimer toutes","mf.print.pdfReady":"Votre document PDF est pr\u00eat.","mf.print.noPage":'Pas de page s\u00e9lectionn\u00e9e, appuyez sur le bouton "Ajouter page" pour en cr\u00e9er une.',"mf.print.print-tooltip":"G\u00e9n\u00e9rer un PDF contenant au moins l'\u00e9tendue de la carte","mf.print.serverDown":"Le service d'impression ne fonctionne pas",
"mf.error":"Erreur","mf.warning":"Attention","mf.information":"Information","mf.cancel":"Annuler","mf.recenter.x":"X","mf.recenter.y":"Y","mf.recenter.submit":"Recentrer","mf.recenter.missingCoords":"Les coordonn\u00e9es sont incompl\u00e8tes.","mf.recenter.outOfRangeCoords":"Les coordonn\u00e9es fournies (${myX}, ${myY}) sont en dehors de la carte.<br />Elles doivent \u00eatre comprises dans les limites suivantes :<br/>${coordX} entre ${minCoordX} et ${maxCoordX},<br />${coordY} entre ${minCoordY} et ${maxCoordY}",
"mf.recenter.emptyText":"Texte \u00e0 rechercher","mf.recenter.ws.error":"Une erreur est survenue lors de l'acc\u00e8s au webservice distant:","mf.recenter.ws.service":"Service s\u00e9lectionn\u00e9","mf.control.previous":"Vue pr\u00e9c\u00e9dente","mf.control.next":"Vue suivante","mf.control.pan":"D\u00e9placer","mf.control.zoomIn":"Zoom avant","mf.control.zoomOut":"Zoom arri\u00e8re","mf.control.zoomAll":"Vue globale","mf.editing.comboNoneName":"Aucun","mf.editing.import":"Importer","mf.editing.importTooltip":"Importer les donn\u00e9es",
"mf.editing.commit":"Sauver","mf.editing.commitTooltip":"Sauvegarder les donn\u00e9es","mf.editing.delete":"Supprimer","mf.editing.deleteTooltip":"Supprimer l'\u00e9l\u00e9ment s\u00e9lectionn\u00e9","mf.editing.comboLabel":"Couche \u00e0 \u00e9diter","mf.editing.confirmMessageTitle":"El\u00e9ments \u00e9dit\u00e9s","mf.editing.confirmMessage":"Certains \u00e9l\u00e9ments ne sont pas sauvegard\u00e9s, changer de couche?","mf.editing.selectModifyFeature":"Modifier des \u00e9l\u00e9ments","mf.editing.drawPointTitle":"Dessiner des points",
"mf.editing.drawLineTitle":"Dessiner des lignes","mf.editing.drawPolygonTitle":"Dessiner des polygones","mf.editing.formTitle":"Attributs","mf.editing.gridIdHeader":"Id","mf.editing.gridStateHeader":"Etat","mf.editing.gridTitle":"El\u00e9ments s\u00e9lectionn\u00e9s","mf.editing.onContextClickMessage":"Editer cet \u00e9l\u00e9ment","mf.editing.onBeforeUnloadMessage":"Le panneau d'\u00e9dition contient des \u00e9l\u00e9ments non sauvegard\u00e9s"});mapfish.Color=OpenLayers.Class({getColorRgb:function(){}});
mapfish.ColorRgb=OpenLayers.Class(mapfish.Color,{redLevel:null,greenLevel:null,blueLevel:null,initialize:function(a,b,c){this.redLevel=a;this.greenLevel=b;this.blueLevel=c},equals:function(a){return a.redLevel==this.redLevel&&a.greenLevel==this.greenLevel&&a.blueLevel==this.blueLevel},getColorRgb:function(){return this},getRgbArray:function(){return[this.redLevel,this.greenLevel,this.blueLevel]},hex2rgbArray:function(a){"#"==a.charAt(0)&&(a=a.substr(1));for(var a=[parseInt(a.substring(0,2),16),parseInt(a.substring(2,
4),16),parseInt(a.substring(4,6),16)],b=0;b<a.length;b++)(0>a[b]||255<a[b])&&OpenLayers.Console.error("Invalid rgb hex color string: rgbHexString");return a},setFromHex:function(a){a=this.hex2rgbArray(a);this.redLevel=a[0];this.greenLevel=a[1];this.blueLevel=a[2]},setFromRgb:function(a){a=dojo.colorFromString(a);this.redLevel=a.r;this.greenLevel=a.g;this.blueLevel=a.b},toHexString:function(){var a=this.toHex(this.redLevel),b=this.toHex(this.greenLevel),c=this.toHex(this.blueLevel);return"#"+a+b+c},
toHex:function(a){(0>a||255<a)&&OpenLayers.Console.error("Invalid decimal value for color level");var b=a%16;return"0123456789ABCDEF".charAt(Math.floor(a/16))+"0123456789ABCDEF".charAt(b)},CLASS_NAME:"mapfish.ColorRgb"});
mapfish.ColorRgb.getColorsArrayByRgbInterpolation=function(a,b,c){var d=[],a=a.getColorRgb(),e=b.getColorRgb(),b=a.getRgbArray(),e=e.getRgbArray();if(1==c)return[a];for(a=0;a<c;a++){var f=[];f[0]=b[0]+a*(e[0]-b[0])/(c-1);f[1]=b[1]+a*(e[1]-b[1])/(c-1);f[2]=b[2]+a*(e[2]-b[2])/(c-1);d[a]=new mapfish.ColorRgb(parseInt(f[0]),parseInt(f[1]),parseInt(f[2]))}return d};mapfish.GeoStat=OpenLayers.Class({layer:null,format:null,url:null,requestSuccess:function(){},requestFailure:function(){},featureSelection:!0,nameAttribute:null,indicator:null,defaultSymbolizer:{},selectSymbolizer:{strokeColor:"#000000"},legendDiv:null,initialize:function(a,b){this.map=a;this.addOptions(b);if(!this.layer){var c=new OpenLayers.StyleMap({"default":new OpenLayers.Style(OpenLayers.Util.applyDefaults(this.defaultSymbolizer,OpenLayers.Feature.Vector.style["default"])),select:new OpenLayers.Style(this.selectSymbolizer)}),
c=new OpenLayers.Layer.Vector("geostat",{displayInLayerSwitcher:!1,visibility:!1,styleMap:c});a.addLayer(c);this.layer=c}this.featureSelection&&(this.layer.events.on({featureselected:this.showDetails,featureunselected:this.hideDetails,scope:this}),c=new OpenLayers.Control.SelectFeature(this.layer,{hover:!0}),a.addControl(c),c.activate());this.url&&OpenLayers.loadURL(this.url,"",this,this.onSuccess,this.onFailure);this.legendDiv=Ext.get(b.legendDiv)},onSuccess:function(a){var b=a.responseXML;if(!b||
!b.documentElement)b=a.responseText;var c=this.format||new OpenLayers.Format.GeoJSON;this.layer.addFeatures(c.read(b));this.requestSuccess(a)},onFailure:function(a){this.requestFailure(a)},addOptions:function(a){a&&(this.options||(this.options={}),OpenLayers.Util.extend(this.options,a),OpenLayers.Util.extend(this,a))},extendStyle:function(a,b,c){var d=this.layer.styleMap.styles["default"];a&&(d.rules=a);b&&d.setDefaultStyle(OpenLayers.Util.applyDefaults(b,d.defaultStyle));c&&(d.context||(d.context=
{}),OpenLayers.Util.extend(d.context,c))},applyClassification:function(){this.layer.renderer.clear();this.layer.redraw();this.updateLegend();this.layer.setVisibility(!0)},showDetails:function(a){var a=a.feature,b="string"==typeof this.nameAttribute?'<h4 style="margin-top:5px">'+a.attributes[this.nameAttribute]+"</h4>":"",b=b+(this.indicator+": "+a.attributes[this.indicator]),c=this.layer.map.getExtent(),c=new OpenLayers.LonLat(c.right,c.bottom),d=new OpenLayers.Size(200,100),b=new OpenLayers.Popup.AnchoredBubble(a.attributes[this.nameAttribute],
c,d,b,0.5,!1),a=a.layer.styleMap.createSymbolizer(a,"default");b.setBackgroundColor(a.fillColor);this.layer.map.addPopup(b)},hideDetails:function(){for(var a=this.layer.map,b=a.popups.length-1;0<=b;--b)a.removePopup(a.popups[b])},CLASS_NAME:"mapfish.GeoStat"});
mapfish.GeoStat.Distribution=OpenLayers.Class({labelGenerator:function(a,b,c){return this.defaultLabelGenerator(a,b,c)},values:null,nbVal:null,minVal:null,maxVal:null,initialize:function(a,b){OpenLayers.Util.extend(this,b);this.values=a;this.minVal=(this.nbVal=a.length)?mapfish.Util.min(this.values):0;this.maxVal=this.nbVal?mapfish.Util.max(this.values):0},defaultLabelGenerator:function(a){return a.lowerBound.toFixed(3)+" - "+a.upperBound.toFixed(3)+" ("+a.nbVal+")"},classifyWithBounds:function(a){for(var b=
[],c=[],d=[],e=0;e<this.values.length;e++)d.push(this.values[e]);d.sort(function(a,b){return a-b});for(var f=a.length-1,e=0;e<f;e++)c[e]=0;for(e=0;e<f-1;e)d[0]<a[e+1]?(c[e]+=1,d.shift()):e++;c[f-1]=this.nbVal-mapfish.Util.sum(c);for(e=0;e<f;e++)b[e]=new mapfish.GeoStat.Bin(c[e],a[e],a[e+1],e==f-1),b[e].label=(this.labelGenerator||this.defaultLabelGenerator)(b[e],e,f);return new mapfish.GeoStat.Classification(b)},classifyByEqIntervals:function(a){for(var b=[],c=0;c<=a;c++)b[c]=this.minVal+c*(this.maxVal-
this.minVal)/a;return this.classifyWithBounds(b)},classifyByQuantils:function(a){var b=this.values;b.sort(function(a,b){return a-b});var c=Math.round(this.values.length/a),d=[],e=0==c?0:c;if(0<b.length){d[0]=b[0];for(i=1;i<a;i++)d[i]=b[e],e+=c;d.push(b[b.length-1])}return this.classifyWithBounds(d)},sturgesRule:function(){return Math.floor(1+3.3*Math.log(this.nbVal,10))},classify:function(a,b,c){var d=null;b||(b=this.sturgesRule());switch(a){case mapfish.GeoStat.Distribution.CLASSIFY_WITH_BOUNDS:d=
this.classifyWithBounds(c);break;case mapfish.GeoStat.Distribution.CLASSIFY_BY_EQUAL_INTERVALS:d=this.classifyByEqIntervals(b);break;case mapfish.GeoStat.Distribution.CLASSIFY_BY_QUANTILS:d=this.classifyByQuantils(b);break;default:OpenLayers.Console.error("unsupported or invalid classification method")}return d},CLASS_NAME:"mapfish.GeoStat.Distribution"});mapfish.GeoStat.Distribution.CLASSIFY_WITH_BOUNDS=0;mapfish.GeoStat.Distribution.CLASSIFY_BY_EQUAL_INTERVALS=1;
mapfish.GeoStat.Distribution.CLASSIFY_BY_QUANTILS=2;mapfish.GeoStat.Bin=OpenLayers.Class({label:null,nbVal:null,lowerBound:null,upperBound:null,isLast:!1,initialize:function(a,b,c,d){this.nbVal=a;this.lowerBound=b;this.upperBound=c;this.isLast=d},CLASS_NAME:"mapfish.GeoStat.Bin"});
mapfish.GeoStat.Classification=OpenLayers.Class({bins:[],initialize:function(a){this.bins=a},getBoundsArray:function(){for(var a=[],b=0;b<this.bins.length;b++)a.push(this.bins[b].lowerBound);0<this.bins.length&&a.push(this.bins[this.bins.length-1].upperBound);return a},CLASS_NAME:"mapfish.GeoStat.Classification"});mapfish.GeoStat.Choropleth=OpenLayers.Class(mapfish.GeoStat,{colors:[new mapfish.ColorRgb(120,120,0),new mapfish.ColorRgb(255,0,0)],method:mapfish.GeoStat.Distribution.CLASSIFY_BY_QUANTILS,numClasses:5,defaultSymbolizer:{fillOpacity:1},classification:null,colorInterpolation:null,initialize:function(a,b){mapfish.GeoStat.prototype.initialize.apply(this,arguments)},updateOptions:function(a){var b=OpenLayers.Util.extend({},this.options);this.addOptions(a);a&&(a.method!=b.method||a.indicator!=b.indicator||
a.numClasses!=b.numClasses?this.setClassification():a.colors&&(!a.colors[0].equals(b.colors[0])||!a.colors[1].equals(b.colors[1]))&&this.createColorInterpolation())},createColorInterpolation:function(){var a=this.colors;this.colorInterpolation=mapfish.ColorRgb.getColorsArrayByRgbInterpolation(a[0],a[1],this.classification.bins.length)},setClassification:function(){for(var a=[],b=this.layer.features,c=0;c<b.length;c++)a.push(b[c].attributes[this.indicator]);this.classification=(new mapfish.GeoStat.Distribution(a,
{labelGenerator:this.options.labelGenerator})).classify(this.method,this.numClasses,null);this.createColorInterpolation()},applyClassification:function(a){this.updateOptions(a);for(var b=this.classification.getBoundsArray(),c=Array(b.length-1),d=0;d<b.length-1;d++){var e=new OpenLayers.Rule({symbolizer:{fillColor:this.colorInterpolation[d].toHexString()},filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.BETWEEN,property:this.indicator,lowerBoundary:b[d],upperBoundary:b[d+
1]})});c[d]=e}this.extendStyle(c);mapfish.GeoStat.prototype.applyClassification.apply(this,arguments)},updateLegend:function(){if(this.legendDiv){this.legendDiv.update("");for(var a=0;a<this.classification.bins.length;a++){var b=document.createElement("div");b.style.backgroundColor=this.colorInterpolation[a].toHexString();b.style.width="30px";b.style.height="15px";b.style.cssFloat="left";b.style.marginRight="10px";this.legendDiv.appendChild(b);b=document.createElement("div");b.innerHTML=this.classification.bins[a].label;
this.legendDiv.appendChild(b);b=document.createElement("div");b.style.clear="left";this.legendDiv.appendChild(b)}}},CLASS_NAME:"mapfish.GeoStat.Choropleth"});mapfish.GeoStat.ProportionalSymbol=OpenLayers.Class(mapfish.GeoStat,{minSize:2,maxSize:20,minVal:null,maxVal:null,initialize:function(a,b){mapfish.GeoStat.prototype.initialize.apply(this,arguments)},updateOptions:function(a){var b=OpenLayers.Util.extend({},this.options);this.addOptions(a);a&&a.indicator!=b.indicator&&this.setClassification()},setClassification:function(){for(var a=[],b=this.layer.features,c=0;c<b.length;c++)a.push(b[c].attributes[this.indicator]);a=new mapfish.GeoStat.Distribution(a);
this.minVal=a.minVal;this.maxVal=a.maxVal},applyClassification:function(a){a&&a.resetClassification&&this.setClassification();var b=OpenLayers.Function.bind(function(a){return(a.attributes[this.indicator]-this.minVal)/(this.maxVal-this.minVal)*(this.maxSize-this.minSize)+this.minSize},this);this.extendStyle(null,{pointRadius:"${calculateRadius}"},{calculateRadius:b});mapfish.GeoStat.prototype.applyClassification.apply(this,arguments)},updateLegend:function(){this.legendDiv&&(this.legendDiv.innerHTML=
"Needs to be done !")},CLASS_NAME:"mapfish.GeoStat.ProportionalSymbol"});mapfish.Routing=OpenLayers.Class({url:null,vector:null,parser:null,initialize:function(a,b,c){this.url=a;this.map=b;OpenLayers.Util.extend(this,c);this.parser=new OpenLayers.Format.GeoJSON;this.vector=new OpenLayers.Layer.Vector("Routing");this.map.addLayer(this.vector)},onSuccess:function(a){if(-1!=a.responseText.search(/^error/))OpenLayers.Console.error("Routing data returned by server contains error: "+a.responseText),this.onFailure(a);else if(this.vector.destroyFeatures(),a=this.parser.read(a.responseText)){for(var b=
a[0].geometry.getBounds(),c=0;c<a.length;c++)a[c].attributes._isSourceNode?a[c].style=mapfish.Routing.firstPointStyle:a[c].attributes._isTargetNode?a[c].style=mapfish.Routing.lastPointStyle:(b.extend(a[c].geometry.getBounds()),a[c].style=mapfish.Routing.routeStyle);this.vector.addFeatures(a);this.map.getExtent().containsBounds(b)||this.map.zoomToExtent(b)}else this.onFailure("can't parse features")},onFailure:function(a){OpenLayers.Console.error("Failed to fetch routing data: "+a)},fetchRoute:function(a){new OpenLayers.Ajax.Request(this.url,
{method:"get",parameters:a,onSuccess:OpenLayers.Function.bind(this.onSuccess,this),onFailure:OpenLayers.Function.bind(this.onFailure,this)})}});mapfish.Routing.routeStyle={strokeColor:"blue",strokeWidth:6,strokeOpacity:0.4};OpenLayers.Util.applyDefaults(mapfish.Routing.routeStyle,OpenLayers.Feature.Vector.style["default"]);mapfish.Routing.firstPointStyle={externalGraphic:mapfish._getScriptLocation()+"img/routing-start-node.png",graphicWidth:18,graphicHeight:26,graphicYOffset:-26,fillOpacity:1,cursor:"pointer"};
OpenLayers.Util.applyDefaults(mapfish.Routing.firstPointStyle,OpenLayers.Feature.Vector.style["default"]);mapfish.Routing.lastPointStyle={externalGraphic:mapfish._getScriptLocation()+"img/routing-stop-node.png",graphicWidth:18,graphicHeight:26,graphicYOffset:-26,fillOpacity:1,cursor:"pointer"};OpenLayers.Util.applyDefaults(mapfish.Routing.lastPointStyle,OpenLayers.Feature.Vector.style["default"]);mapfish.Util={};mapfish.Util.sum=function(a){for(var b=0,c=0;b<a.length;c+=a[b++]);return c};mapfish.Util.max=function(a){return Math.max.apply({},a)};mapfish.Util.min=function(a){return Math.min.apply({},a)};
mapfish.Util.getIconUrl=function(a,b){if(!b.layer)return OpenLayers.Console.warn("Missing required layer option in mapfish.Util.getIconUrl"),"";b.rule||(b.rule=b.layer);0>a.indexOf("?")?a+="?":a.lastIndexOf("&")!=a.length-1&&a.indexOf("?")!=a.length-1&&(a+="&");b=OpenLayers.Util.extend({layer:"",rule:"",service:"WMS",version:"1.1.1",request:"GetLegendGraphic",format:"image/png",width:16,height:16},b);b=OpenLayers.Util.upperCaseObject(b);return a+OpenLayers.Util.getParameterString(b)};
mapfish.Util.arrayEqual=function(a,b){if(null==a||null==b||("object"!=typeof a||"object"!=typeof b)||a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(typeof a[c]!=typeof b[c]||a[c]!=b[c])return!1;return!0};mapfish.Util.isIE7=function(){return-1<navigator.userAgent.toLowerCase().indexOf("msie 7")};
mapfish.Util.relativeToAbsoluteURL=function(a){if(/^\w+:/.test(a)||!a)return a;var b=location.protocol+"//"+location.host;if(0==a.indexOf("/"))return b+a;var c=location.pathname.replace(/\/[^\/]*$/,"");return b+c+"/"+a};mapfish.Util.fixArray=function(a){return""==a||null==a?[]:a instanceof Array?a:a.split(",")};
mapfish.Util.formatURL=function(a){var b=mapfish.PROXY_HOST;if(b&&0==a.indexOf("http")){var c=a,a=c.match(/https?:\/\//)[0].split(":")[0],c=c.slice((a+"://").length),d=void 0,e=c.indexOf("/");-1!=e&&(d=c.substring(e),c=c.slice(0,e));e=c.split(":");c=1<e.length?e[1]:void 0;a=a+","+e[0];a=a+(void 0==c?"":","+c)+(void 0==d?"":d);b.lastIndexOf("/")!=b.length-1&&(a="/"+a);a=b+a}return a};mapfish.Searcher=OpenLayers.Class({initialize:function(a){a=a||{};!1!==a.autobind&&this.bind(a.protocol)},bind:function(a){for(;a&&!(a instanceof mapfish.Protocol.MergeFilterDecorator);)a=a.protocol;a&&a.register(this);return a},getFilter:function(){},CLASS_NAME:"mapfish.Searcher"});mapfish.Searcher.Map=OpenLayers.Class(mapfish.Searcher,OpenLayers.Control,{EVENT_TYPES:["searchcomplete","searchcanceled"],protocol:null,url:null,mode:null,searchTolerance:3,searchToleranceUnits:"pixels",pointAsBBOX:!1,pixelTolerance:2,delay:300,boxDivClassName:"olHandlerBoxZoomBox",displayDefaultPopup:!1,onMouseMove:function(){},position:null,popupLonLat:null,response:null,projection:null,initialize:function(a){this.mode=mapfish.Searcher.Map.CLICK;this.EVENT_TYPES=mapfish.Searcher.Map.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);
mapfish.Searcher.prototype.initialize.call(this,a);OpenLayers.Control.prototype.initialize.call(this,a);this.protocol instanceof OpenLayers.Protocol||(this.protocol=new mapfish.Protocol.MapFish(OpenLayers.Util.extend({url:this.url},this.protocol)));switch(this.mode){case mapfish.Searcher.Map.CLICK:this.handler=new OpenLayers.Handler.Click(this,{click:this.handlePoint},{delay:this.delay,pixelTolerance:this.pixelTolerance});break;case mapfish.Searcher.Map.HOVER:this.handler=new OpenLayers.Handler.Hover(this,
{pause:this.handlePoint,move:this.cancelSearch},{delay:this.delay,pixelTolerance:this.pixelTolerance});break;case mapfish.Searcher.Map.BOX:this.handler=new OpenLayers.Handler.Box(this,{done:this.handleBox},{boxDivClassName:this.boxDivClassName});break;case mapfish.Searcher.Map.EXTENT:break;default:OpenLayers.Console.error("unsupported mode")}},activate:function(){var a=OpenLayers.Control.prototype.activate.call(this);a&&this.mode==mapfish.Searcher.Map.EXTENT&&this.map.events.register("moveend",this,
this.handleMoveend);return a},deactivate:function(){var a=OpenLayers.Control.prototype.deactivate.call(this);a&&this.mode==mapfish.Searcher.Map.EXTENT&&this.map.events.unregister("moveend",this,this.handleMoveend);return a},handlePoint:function(a){this.position=a.xy;this.popupLonLat=this.map.getLonLatFromViewPortPx(this.position);this.triggerSearch()},handleBox:function(a){if(a instanceof OpenLayers.Bounds){var b=this.map.getLonLatFromPixel(new OpenLayers.Pixel(a.left,a.bottom)),a=this.map.getLonLatFromPixel(new OpenLayers.Pixel(a.right,
a.top));this.position=new OpenLayers.Bounds(b.lon,b.lat,a.lon,a.lat);this.popupLonLat=this.position.getCenterLonLat()}else this.position=a,this.popupLonLat=this.map.getLonLatFromViewPortPx(this.position);this.triggerSearch()},handleMoveend:function(){this.position=this.map.getExtent();this.triggerSearch()},triggerSearch:function(){this.cancelSearch();var a=this.getFilter(),a=this.isFilter(a)?{filter:a}:{params:a},a=OpenLayers.Util.extend({searcher:this,callback:this.handleResponse,scope:this},a);
this.response=this.protocol.read(a)},cancelSearch:function(){this.protocol.abort(this.response);this.events.triggerEvent("searchcanceled",{response:this.response});this.response=null;if(this.mode==mapfish.Searcher.Map.HOVER)this.onMouseMove()},handleResponse:function(a){this.events.triggerEvent("searchcomplete",{response:a});this.displayDefaultPopup&&this.mode!=mapfish.Searcher.Map.EXTENT&&this.displayPopup(a.features)},displayPopup:function(a){if(a&&0<a.length){var b,c="<table><tr>";for(b in a[0].attributes)c+=
"<th>"+b+"</th>";for(var c=c+"</tr>",d=0;d<a.length;d++){var e=a[d].attributes,c=c+"<tr>";for(b in e)c+="<td>"+e[b]+"</td>";c+="</tr>"}a=new OpenLayers.Popup.FramedCloud("mapfish_popup",this.popupLonLat,null,c+"</table>",null,!0);this.map.addPopup(a,!0)}},isFilter:function(a){return!!a.CLASS_NAME&&!!a.CLASS_NAME.match(/^OpenLayers\.Filter/)},reproject:function(a){this.projection&&!this.projection.equals(this.map.getProjectionObject())&&a.transform(this.map.getProjectionObject(),this.projection);return a},
getFilter:function(){var a=null;this.mode==mapfish.Searcher.Map.EXTENT&&!this.position&&(this.position=this.map.getExtent());if(this.position){if(this.position instanceof OpenLayers.Bounds)a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.reproject(this.position)});else{(a=this.searchTolerance)&&"pixels"==this.searchToleranceUnits&&(a*=this.map.getResolution());var b=this.map.getLonLatFromViewPortPx(this.position),c=this.reproject(new OpenLayers.Geometry.Point(b.lon,
b.lat));a?this.pointAsBBOX?(a=new OpenLayers.Bounds(b.lon-a/2,b.lat-a/2,b.lon+a/2,b.lat+a/2),a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.reproject(a)})):a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.DWITHIN,value:c,distance:a,distanceUnits:this.map.getUnits()}):a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.WITHIN,value:c})}this.position=null}return a},CLASS_NAME:"mapfish.Searcher.Map"});mapfish.Searcher.Map.CLICK="CLICK";
mapfish.Searcher.Map.HOVER="HOVER";mapfish.Searcher.Map.BOX="BOX";mapfish.Searcher.Map.EXTENT="EXTENT";mapfish.Searcher.Form=OpenLayers.Class(mapfish.Searcher,{protocol:null,form:null,response:null,initialize:function(a){mapfish.Searcher.prototype.initialize.call(this,a);OpenLayers.Util.extend(this,a);this.form?this.protocol||OpenLayers.Console.error("no protocol set"):OpenLayers.Console.error("no form set")},triggerSearch:function(){this.protocol.abort(this.response);this.response=this.protocol.read({filter:this.getFilter(),searcher:this})},getFilter:function(){var a,b={},c=this.form,d=c.getElementsByTagName("input");
for(a=0;a<d.length;a++)if(f=d.item(a),!0!=f.disabled){var e=f.getAttribute("type");"radio"==e||"checkbox"==e?f.checked&&(b=OpenLayers.Util.extend(b,this.getParamsFromInput(f))):"submit"==e||("button"==e||"image"==e)||(b=OpenLayers.Util.extend(b,this.getParamsFromInput(f)))}c=c.getElementsByTagName("select");for(a=0;a<c.length;a++)for(var f=c.item(a),d=f.getAttribute("name"),e=f.getElementsByTagName("option"),h=0;h<e.length;h++)if(f=e.item(h),f.selected){f=f.getAttribute("value");null==f&&(f="");var g=
{};g[d]=f;b=OpenLayers.Util.extend(b,g)}return OpenLayers.Util.extend(this.params,b)},getParamsFromInput:function(a){var b=a.getAttribute("type"),c=a.getAttribute("name"),a="text"==b?a.value:a.getAttribute("value"),b={};b[c]=null!=a?a:null;return b},CLASS_NAME:"mapfish.Searcher.Form"});mapfish.PrintProtocol=OpenLayers.Class({config:null,spec:null,params:null,hasOverview:!1,initialize:function(a,b,c,d,e){this.config=b;this.spec={pages:[]};c=this.fixOverrides(c,a);this.addMapParams(c,a,d);this.addOverviewMapParams(c,a,d);this.params=e},getAllInOneUrl:function(){var a=new OpenLayers.Format.JSON,a=this.config.printURL+"?spec="+a.write(this.encodeForURL(this.spec));this.params&&(a+="&"+OpenLayers.Util.getParameterString(this.params));return a},createPDF:function(a,b,c,d){var e=(new OpenLayers.Format.JSON).write(this.spec);
OpenLayers.Console.info(e);try{var f=OpenLayers.Util.applyDefaults({url:this.config.createURL},this.params);OpenLayers.Request.POST({url:this.config.createURL,data:e,params:f,headers:{"CONTENT-TYPE":"application/json; charset=UTF-8"},callback:function(e){if(200<=e.status&&300>e.status){var f=(new OpenLayers.Format.JSON).read(e.responseText);f&&f.getURL?this.openPdf(f,a,b,d):c.call(d,e)}else c.call(d,e)},scope:this})}catch(h){OpenLayers.Console.warn("Cannot request the print service by AJAX. You must set the 'OpenLayers.ProxyHost' variable. Fallback to GET method"),
window.open(this.getAllInOneUrl()),a.call(d,h)}},openPdf:function(a,b,c,d){OpenLayers.Console.info(a.getURL);Ext.isIE||Ext.isOpera?c.call(d,a):(window.location=a.getURL,b.call(d))},fixOverrides:function(a,b){for(var a=OpenLayers.Util.extend({},a),c=!1,d,e=0;e<b.layers.length;++e)d=b.layers[e].name,a[d]?a[d].overview&&(c=!0):a[d]={};if(c)for(d in a)e=a[d],e.overview||(e.overview=!1);this.hasOverview=c;return a},addMapParams:function(a,b,c){var d=this.spec;d.dpi=c;d.units=b.baseLayer.units;d.srs=b.baseLayer.projection.getCode();
d=d.layers=[];this.fillLayers(d,b.layers,a,c)},addOverviewMapParams:function(a,b,c){if(!this.hasOverview&&(b=b.getControlsByClass("OpenLayers.Control.OverviewMap"),0<b.length)){var d=this.spec.overviewLayers=[];this.fillLayers(d,b[0].layers,a,c)}},fillLayers:function(a,b,c,d){for(var e=0;e<b.length;++e){var f=b[e],h=OpenLayers.Util.extend({},c[f.name]);OpenLayers.Util.extend(h,h[d]);if(f.getVisibility()&&!1!==h.visibility||!0===h.visibility){var g=f.CLASS_NAME,j=mapfish.PrintProtocol.SUPPORTED_TYPES[g];
if(j){if(g=j.call(this,f))this.applyOverrides(g,h),f.isBaseLayer?a.unshift(g):a.push(g)}else j||OpenLayers.Console.error("Don't know how to print a layer of type "+g+" ("+f.name+")")}}},applyOverrides:function(a,b){for(var c in b)if(isNaN(parseInt(c))){var d=b[c];if("layers"==c||"styles"==c)d=mapfish.Util.fixArray(d);"visibility"!=c&&(null!=a[c]||"overview"==c?a[c]=d:a.customParams[c]=d)}},convertLayer:function(a){var b=a.url;b instanceof Array&&(b=b[0]);return{baseURL:mapfish.Util.relativeToAbsoluteURL(b),
opacity:null!=a.opacity?a.opacity:1,singleTile:a.singleTile,customParams:{}}},convertWMSLayer:function(a){var b=OpenLayers.Util.extend(this.convertLayer(a),{type:"WMS",layers:mapfish.Util.fixArray(a.params.LAYERS),format:a.params.FORMAT||a.DEFAULT_PARAMS.format,styles:mapfish.Util.fixArray(a.params.STYLES||a.DEFAULT_PARAMS.styles)}),c;for(c in a.params){var d=c.toLowerCase();null==a.DEFAULT_PARAMS[d]&&("layers"!=d&&"width"!=d&&"height"!=d&&"srs"!=d)&&(b.customParams[c]=a.params[c])}return b},convertMapServerLayer:function(a){var b=
OpenLayers.Util.extend(this.convertLayer(a),{type:"MapServer",layers:mapfish.Util.fixArray(a.params.LAYERS||a.params.layers),format:a.params.FORMAT||a.params.format||a.DEFAULT_PARAMS.format}),c;for(c in a.params){var d=c.toLowerCase();null==a.DEFAULT_PARAMS[d]&&("layers"!=d&&"format"!=d&&"width"!=d&&"height"!=d&&"srs"!=d)&&(b.customParams[c]=a.params[c])}return b},convertTileCacheLayer:function(a){return OpenLayers.Util.extend(this.convertLayer(a),{type:"TileCache",layer:a.layername,maxExtent:a.maxExtent.toArray(),
tileSize:[a.tileSize.w,a.tileSize.h],extension:a.extension,resolutions:a.serverResolutions||a.resolutions})},convertOSMLayer:function(a){a=this.convertTileCacheLayer(a);a.type="Osm";a.baseURL=a.baseURL.substr(0,a.baseURL.indexOf("$"));a.extension="png";return a},convertImageLayer:function(a){var b=a.getURL(a.extent);return{type:"Image",baseURL:mapfish.Util.relativeToAbsoluteURL(b),opacity:null!=a.opacity?a.opacity:1,extent:a.extent.toArray(),pixelSize:[a.size.w,a.size.h],name:a.name}},convertVectorLayer:function(a){for(var b=
a.features,c=[],d={},e=new OpenLayers.Format.GeoJSON,f=1,h=0;h<b.length;++h){var g=b[h],j=g.style||a.style||a.styleMap.createSymbolizer(g,g.renderIntent),n;j._printId?n=j._printId:(j._printId=n=f++,d[n]=j,j.externalGraphic&&(j.externalGraphic=mapfish.Util.relativeToAbsoluteURL(j.externalGraphic)));g=e.extract.feature.call(e,g);g.properties=OpenLayers.Util.extend({_style:n},g.properties);for(var k in g.properties)n=g.properties[k],n instanceof Object&&!(n instanceof String)&&delete g.properties[k];
c.push(g)}for(var l in d)delete d[l]._printId;b={type:"FeatureCollection",features:c};return OpenLayers.Util.extend(this.convertLayer(a),{type:"Vector",styles:d,styleProperty:"_style",geoJson:b,name:a.name,opacity:null!=a.opacity?a.opacity:1})},encodeForURL:function(a){if(null==a)return null;var b=typeof a;Ext.type(a);if("string"==b)return escape(a.replace(/[\n]/g,"\\n"));if("object"==b&&a.constructor==Array){for(var c=[],b=0;b<a.length;++b){var d=this.encodeForURL(a[b]);null!=d&&c.push(d)}return c}if("object"==
b&&a.CLASS_NAME&&"OpenLayers.Feature.Vector"==a.CLASS_NAME)return(new OpenLayers.Format.WKT).write(a);if("object"==b){b={};for(c in a)d=this.encodeForURL(a[c]),null!=d&&(b[c]=d);return b}return a},CLASS_NAME:"mapfish.PrintProtocol"});
mapfish.PrintProtocol.getConfiguration=function(a,b,c,d,e){try{e=OpenLayers.Util.extend(e,{url:a}),OpenLayers.Request.GET({url:a,params:e,callback:function(a){if(200<=a.status&&300>a.status){var e=(new OpenLayers.Format.JSON).read(a.responseText);e?b.call(d,e):c.call(d,a)}else c.call(d,a)}})}catch(f){c.call(d,f)}};mapfish.PrintProtocol.IGNORED=function(){return null};
mapfish.PrintProtocol.SUPPORTED_TYPES={"OpenLayers.Layer":mapfish.PrintProtocol.IGNORED,"OpenLayers.Layer.WMS":mapfish.PrintProtocol.prototype.convertWMSLayer,"mapfish.Layer.SwitchableWMS":mapfish.PrintProtocol.prototype.convertSwitchableWMSLayer,"OpenLayers.Layer.WMS.Untiled":mapfish.PrintProtocol.prototype.convertWMSLayer,"OpenLayers.Layer.TileCache":mapfish.PrintProtocol.prototype.convertTileCacheLayer,"OpenLayers.Layer.OSM":mapfish.PrintProtocol.prototype.convertOSMLayer,"OpenLayers.Layer.Vector":mapfish.PrintProtocol.prototype.convertVectorLayer,
"OpenLayers.Layer.Vector.RootContainer":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.GML":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.PointTrack":mapfish.PrintProtocol.prototype.convertVectorLayer,"OpenLayers.Layer.MapServer":mapfish.PrintProtocol.prototype.convertMapServerLayer,"OpenLayers.Layer.MapServer.Untiled":mapfish.PrintProtocol.prototype.convertMapServerLayer,"OpenLayers.Layer.Image":mapfish.PrintProtocol.prototype.convertImageLayer};mapfish.Offline=function(){function a(a,b){this.label=a;this.id=b}function b(){0<d||null==this.syncState||(this.isSynchronizing=!1,"download"==this.syncState?(this.isOnline=!1,this.events.triggerEvent("network","offline"),this.events.triggerEvent("sync","downloadDone")):"upload"==this.syncState?this.events.triggerEvent("sync","uploadDone"):OpenLayers.Console.error("Unexpected state "+this.syncState),this.syncState=null)}var c=0,d=0,e={},f={isOnline:!0,syncState:null,hasOfflineCache:!1,events:null,
goOffline:function(){if(this.isOnline){this.syncState="download";this.events.triggerEvent("sync","download");var a=this;setTimeout(function(){b.call(a)},100)}},goOnline:function(){if(!this.isOnline){this.isOnline=!0;this.events.triggerEvent("network","online");this.syncState="upload";this.events.triggerEvent("sync","upload");var a=this;setTimeout(function(){b.call(a)},100)}},addSyncTask:function(b){d++;var f=++c,b=new a(b,f);e[f]=b;this.events.triggerEvent("synctask",{type:"syncTaskAdded",syncTask:b});
return f},syncTaskDone:function(a){if(e[a]){this.events.triggerEvent("synctask",{type:"syncTaskDone",syncTask:e[a]});d--;delete e[a];var c=this;setTimeout(function(){b.call(c)},0)}else OpenLayers.Console.error(arguments.callee.name+": Unknown syncTaskId "+a)}};f.events=new OpenLayers.Events(this,null,["network","sync","synctask"],!1);navigator&&void 0!=navigator.onLine&&(f.isOnline=navigator.onLine);f.hasOfflineCache=!(!window.google||!google.gears);return f}();mapfish.Protocol={decorateProtocol:function(a){var b=a.protocol,c;for(c in a)"protocol"!=c&&(mapfish.Protocol[c]?b=new mapfish.Protocol[c](OpenLayers.Util.extend({protocol:b},a[c])):OpenLayers.Console.error("mapfish.Protocol."+c+" does not exist"));return b}};mapfish.Protocol.MapFish=OpenLayers.Class(OpenLayers.Protocol.HTTP,{wildcarded:!1,initialize:function(a){a=a||{};a.format||(a.format=new OpenLayers.Format.GeoJSON);OpenLayers.Protocol.HTTP.prototype.initialize.call(this,a)},create:function(a,b){b=b||{};b.headers=OpenLayers.Util.extend(b.headers,{"Content-Type":"plain/text"});return OpenLayers.Protocol.HTTP.prototype.create.call(this,a,b)},handleCreate:function(a,b){this.handleCreateUpdate(a,b)},read:function(a){a.params=OpenLayers.Util.applyDefaults(a.params,
this.options.params);a&&this.filterAdapter(a);return OpenLayers.Protocol.HTTP.prototype.read.call(this,a)},handleRead:function(a,b){var c=a.priv;b.callback&&(200==c.status?(a.features=this.parseFeatures(c),a.code=OpenLayers.Protocol.Response.SUCCESS):(a.features=null,a.code=OpenLayers.Protocol.Response.FAILURE),b.callback.call(b.scope,a))},_filterToParams:function(a,b){var c=a.CLASS_NAME;if("Filter"!=c.substring(c.indexOf(".")+1,c.lastIndexOf(".")))return!1;c=c.substring(c.lastIndexOf(".")+1);switch(c){case "Spatial":c=
a.type;switch(c){case OpenLayers.Filter.Spatial.BBOX:if(b.bbox)return OpenLayers.Console.error("Filter contains multiple Spatial BBOX entries"),!1;b.bbox=a.value.toBBOX();break;case OpenLayers.Filter.Spatial.DWITHIN:b.tolerance=a.distance;case OpenLayers.Filter.Spatial.WITHIN:if(b.lon)return OpenLayers.Console.error("Filter contains multiple Spatial *WITHIN entries"),!1;b.lon=a.value.x;b.lat=a.value.y;break;default:return OpenLayers.Console.warn("Unknown spatial filter type "+c),!1}break;case "Comparison":if(void 0===
mapfish.Protocol.MapFish.COMP_TYPE_TO_OP_STR[a.type])return OpenLayers.Console.error("Unknown comparison filter type "+a.type),!1;c=a.value;a.type==OpenLayers.Filter.Comparison.LIKE&&(c=this.regex2value(c),this.wildcarded&&(c="%"+c+"%"));b[a.property]=c;b.queryable=b.queryable||[];b.queryable.push(a.property);break;case "Logical":if(a.type!=OpenLayers.Filter.Logical.AND)return OpenLayers.Console.error("Unsupported logical filter type "+a.type),!1;if(0==a.filters.length)return OpenLayers.Console.error("Empty logical AND filter"),
!1;for(c=0;c<a.filters.length;c++)if(!this._filterToParams(a.filters[c],b))return!1;break;default:return OpenLayers.Console.warn("Unknown filter type "+c),!1}return!0},regex2value:function(a){a=a.replace(/%/g,"\\%");a=a.replace(/\\\\\.(\*)?/g,function(a,c){return c?a:"\\\\_"});a=a.replace(/\\\\\.\*/g,"\\\\%");a=a.replace(/(\\)?\.(\*)?/g,function(a,c,d){return c||d?a:"_"});a=a.replace(/(\\)?\.\*/g,function(a,c){return c?a:"%"});a=a.replace(/\\\./g,".");return a=a.replace(/(\\)?\\\*/g,function(a,c){return c?
a:"*"})},filterAdapter:function(a){if(a&&a.filter&&a.filter.CLASS_NAME){var b={};this._filterToParams(a.filter,b)&&(a.params=OpenLayers.Util.extend(a.params,b));delete a.filter}},update:function(a,b){b=b||{};b.url=b.url||a.url||this.options.url+"/"+a.fid;b.headers=OpenLayers.Util.extend(b.headers,{"Content-Type":"plain/text"});return OpenLayers.Protocol.HTTP.prototype.update.call(this,a,b)},handleUpdate:function(a,b){this.handleCreateUpdate(a,b)},handleCreateUpdate:function(a,b){var c=a.priv;b.callback&&
(201==c.status?(a.features=this.parseFeatures(c),a.code=OpenLayers.Protocol.Response.SUCCESS):(a.features=null,a.code=OpenLayers.Protocol.Response.FAILURE),b.callback.call(b.scope,a))},"delete":function(a,b){b=b||{};b.url=b.url||a.url||this.options.url+"/"+a.fid;return OpenLayers.Protocol.HTTP.prototype["delete"].call(this,a,b)},handleDelete:function(a,b){var c=a.priv;b.callback&&(a.code=204==c.status?OpenLayers.Protocol.Response.SUCCESS:OpenLayers.Protocol.Response.FAILURE,b.callback.call(b.scope,
a))},CLASS_NAME:"mapfish.Protocol.MapFish"});mapfish.Protocol.MapFish.COMP_TYPE_TO_OP_STR={};
(function(){var a=mapfish.Protocol.MapFish.COMP_TYPE_TO_OP_STR;a[OpenLayers.Filter.Comparison.EQUAL_TO]="eq";a[OpenLayers.Filter.Comparison.NOT_EQUAL_TO]="ne";a[OpenLayers.Filter.Comparison.LESS_THAN]="lt";a[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO]="lte";a[OpenLayers.Filter.Comparison.GREATER_THAN]="gt";a[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO]="gte";a[OpenLayers.Filter.Comparison.LIKE]="ilike"})();
mapfish.Protocol.MapFish.create=function(a){return mapfish.Protocol.decorateProtocol({protocol:new mapfish.Protocol.MapFish(a),MergeFilterDecorator:null,TriggerEventDecorator:null})};mapfish.Protocol.MergeFilterDecorator=OpenLayers.Class(OpenLayers.Protocol,{searchers:null,protocol:null,initialize:function(a){this.searchers=[];OpenLayers.Protocol.prototype.initialize.call(this,a)},register:function(a){-1==OpenLayers.Util.indexOf(this.searchers,a)&&this.searchers.push(a)},unregister:function(a){OpenLayers.Util.removeItem(this.searchers,a)},create:function(a,b){return this.protocol.create(a,b)},read:function(a){a.filter=this.mergeFilters(a.filter||a.params,a.searcher);delete a.searcher;
return this.protocol.read(a)},mergeFilters:function(a,b){var c,d,e;a&&!this.isFilter(a)&&(a=this.fromObjToFilter(a));c=0;for(d=this.searchers.length;c<d;c++)e=this.searchers[c],e!=b&&(a=this.toFilter(e.getFilter(),a));return a},toFilter:function(a,b){if(!a)return b;b?this.isLogicalFilter(b)||(b=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[b]})):b=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND});var c=b.filters;this.isFilter(a)?c.push(a):c.push(this.fromObjToFilter(a));
return b},fromObjToFilter:function(a){var b=[],c;for(c in a)b.push(new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:c,value:a[c]}));return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:b})},isLogicalFilter:function(a){return!!a.CLASS_NAME&&!!a.CLASS_NAME.match(/^OpenLayers\.Filter\.Logical/)},isFilter:function(a){return!!a.CLASS_NAME&&!!a.CLASS_NAME.match(/^OpenLayers\.Filter/)},update:function(a,b){return this.protocol.update(a,b)},
"delete":function(a,b){return this.protocol["delete"](a,b)},commit:function(a,b){return this.protocol.commit(a,b)},abort:function(a){this.protocol.abort(a)},CLASS_NAME:"mapfish.Protocol.MergeFilterDecorator"});mapfish.Protocol.TriggerEventDecorator=OpenLayers.Class(OpenLayers.Protocol,{protocol:null,events:null,EVENT_TYPES:["crudtriggered","crudfinished","committriggered","commitfinished","clear"],initialize:function(a){OpenLayers.Protocol.prototype.initialize.call(this,a);this.events=new OpenLayers.Events(this,null,this.EVENT_TYPES);if(this.eventListeners instanceof Object)this.events.on(this.eventListeners)},read:function(a){a=OpenLayers.Util.applyDefaults({callback:this.createCallback(this.handleCRUD,
a),scope:null},a);this.events.triggerEvent("crudtriggered",{type:"read"});return this.protocol.read(a)},create:function(a,b){var c=OpenLayers.Util.applyDefaults({callback:this.createCallback(this.handleCRUD,b),scope:null},b);this.events.triggerEvent("crudtriggered",{type:"create"});return this.protocol.create(a,c)},update:function(a,b){var c=OpenLayers.Util.applyDefaults({callback:this.createCallback(this.handleCRUD,b),scope:null},b);this.events.triggerEvent("crudtriggered",{type:"update"});return this.protocol.update(a,
c)},"delete":function(a,b){var c=OpenLayers.Util.applyDefaults({callback:this.createCallback(this.handleCRUD,b),scope:null},b);this.events.triggerEvent("crudtriggered",{type:"delete"});return this.protocol["delete"](a,c)},commit:function(a,b){var c=OpenLayers.Util.applyDefaults({callback:this.createCallback(this.handleCommit,b),scope:null},b);this.events.triggerEvent("committriggered");return this.protocol.commit(a,c)},abort:function(a){this.protocol.abort(a)},createCallback:function(a,b){return OpenLayers.Function.bind(a,
this,b)},handleCRUD:function(a,b){a&&a.callback&&a.callback.call(a.scope,b);this.events.triggerEvent("crudfinished",b)},handleCommit:function(a){a.callback&&a.callback.call(a.scope);this.events.triggerEvent("commitfinished")},clear:function(){this.events.triggerEvent("clear")},CLASS_NAME:"mapfish.Protocol.TriggerEventDecorator"});mapfish.Strategy={};mapfish.Strategy.ProtocolListener=OpenLayers.Class(OpenLayers.Strategy,{append:!1,recenter:!1,initialize:function(a){OpenLayers.Strategy.prototype.initialize.apply(this,[a])},activate:function(){if("mapfish.Protocol.TriggerEventDecorator"!=this.layer.protocol.CLASS_NAME)return OpenLayers.Console.error("This strategy is to be used with a layer whose protocol is an instance of mapfish.Protocol.TriggerEventDecorator"),!1;var a=OpenLayers.Strategy.prototype.activate.call(this);if(a)this.layer.protocol.events.on({crudfinished:this.onCrudfinished,
clear:this.onClear,scope:this});return a},deactivate:function(){var a=OpenLayers.Strategy.prototype.deactivate.call(this);a&&this.layer.protocol.events.un({crudfinished:this.onCrudfinished,clear:this.onClear,scope:this});return a},onCrudfinished:function(a){"read"==a.requestType&&this.addFeatures(a.features)},addFeatures:function(a){this.append||this.layer.destroyFeatures();a&&0<a.length&&(this.layer.addFeatures(a),this.recenter&&this.layer.map.zoomToExtent(this.layer.getDataExtent()))},onClear:function(){this.layer.destroyFeatures()},
CLASS_NAME:"mapfish.Strategy.ProtocolListener"});Ext.namespace("mapfish.widgets");mapfish.widgets.MapComponent=function(a){Ext.apply(this,a);this.contentEl=this.map.div;a=Ext.get(this.contentEl);a.setStyle("width","100%");a.setStyle("height","100%");mapfish.widgets.MapComponent.superclass.constructor.call(this)};Ext.extend(mapfish.widgets.MapComponent,Ext.Panel,{map:null,initComponent:function(){mapfish.widgets.MapComponent.superclass.initComponent.apply(this,arguments);this.on("bodyresize",this.map.updateSize,this.map)}});
Ext.reg("mapcomponent",mapfish.widgets.MapComponent);Ext.namespace("mapfish.widgets");mapfish.widgets.Shortcuts=function(a){Ext.apply(this,a);mapfish.widgets.Shortcuts.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.Shortcuts,Ext.Container,{combo:null,initComponent:function(){this.combo=new Ext.form.ComboBox({name:"shortcuts",hiddenName:"",store:this.store,valueField:"value",displayField:"text",editable:!1,mode:"local",triggerAction:"all",emptyText:"Select a value ...",lazyRender:!0,width:150});this.combo.on("select",this.recenter,this);mapfish.widgets.Shortcuts.superclass.initComponent.call(this)},onRender:function(a,b){this.add(this.combo);this.el||(this.el=document.createElement("div"));
mapfish.widgets.Shortcuts.superclass.onRender.apply(this,arguments);this.initTemplates();this.applyTemplates()},initTemplates:function(){var a=this.templates||{};a.header||(a.header=new Ext.Template("some text before"));a.footer||(a.footer=new Ext.Template("some text after"));this.templates=a},applyTemplates:function(){for(var a in this.templates){var b=this.templates[a],c=document.createElement("div");b.overwrite(c);switch(a){case "header":b.insertBefore(this.el);break;case "footer":b.insertAfter(this.el)}}},
recenter:function(a,b){this.map.zoomToExtent(b.get("bbox"))}});Ext.reg("shortcuts",mapfish.widgets.Shortcuts);Ext.namespace("mapfish.widgets");mapfish.widgets.createScaleComboBox=function(a,b){a.scales||OpenLayers.Console.error("scales is missing in the config");for(var c=function(a){for(var a=String(Math.round(a)),b=/(\d+)(\d{3})/;b.test(a);)a=a.replace(b,"$1'$2");return"1:"+a},d=[],e=0;e<a.scales.length;e++)d.push([a.scales[e],c(a.scales[e])]);return new Ext.form.ComboBox(Ext.apply(b,{store:d}))};Ext.namespace("mapfish.widgets","mapfish.widgets.recenter");mapfish.widgets.recenter.Base=function(a){Ext.apply(this,a);mapfish.widgets.recenter.Base.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.recenter.Base,Ext.FormPanel,{scales:null,showCenter:null,defaultZoom:null,vectorLayer:null,expandedOnce:!1,initComponent:function(){mapfish.widgets.recenter.Base.superclass.initComponent.apply(this,arguments);this.on("destroy",this.destroyResources,this);this.on("collapse",this.destroyResources,this);this.on("deactivate",this.destroyResources,this);this.on("disable",this.destroyResources,this)},render:function(){(!this.ownerCt||!this.ownerCt.initialConfig.layout||"accordion"!=
this.ownerCt.initialConfig.layout.toLowerCase)&&this.addItems();mapfish.widgets.recenter.Base.superclass.render.apply(this,arguments)},expand:function(){mapfish.widgets.recenter.Base.superclass.expand.apply(this,arguments);this.expandedOnce||(this.addItems(),this.expandedOnce=!0,this.doLayout())},addItems:function(){OpenLayers.Console.warn("must be implemented by subclasses")},removeAll:function(){this.items&&(this.items.each(this.remove,this),this.form.items.clear())},addRecenterButton:function(){this.addButton({text:OpenLayers.i18n("mf.recenter.submit"),
handler:this.recenter,scope:this})},addScaleCombo:function(){this.add(mapfish.widgets.createScaleComboBox({scales:this.scales},{fieldLabel:OpenLayers.i18n("mf.print.scale"),typeAhead:!1,value:this.scales[this.defaultZoom]||this.scales[0],mode:"local",id:"scale_"+this.getId(),name:"scale",hiddenName:"scaleValue",editable:!1,triggerAction:"all"}))},recenter:function(){OpenLayers.Console.warn("must be implemented by subclasses")},recenterOnCoords:function(a,b,c){"undefined"==typeof c&&(c="undefined"!=
typeof this.defaultZoom?this.defaultZoom:this.map.getZoom());this.showCenter&&this.showCenterMark(a,b);this.map.setCenter(new OpenLayers.LonLat(a,b),c)},recenterOnBbox:function(a){if(this.showCenter){var b=a.getCenterLonLat();this.showCenterMark(b.lon,b.lat)}this.map.zoomToExtent(a)},recenterOnGeometry:function(a){"OpenLayers.Geometry.Point"==a.CLASS_NAME?this.recenterOnCoords(a.x,a.y):this.recenterOnBbox(a.getBounds())},showCenterMark:function(a,b){this.prepareVectorLayer();var c=[new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(a,
b),{type:this.symbol||"cross"})];this.vectorLayer.addFeatures(c)},prepareVectorLayer:function(){if(this.vectorLayer)this.vectorLayer.destroyFeatures();else{var a=new OpenLayers.StyleMap({"default":OpenLayers.Util.extend({graphicName:"${type}",pointRadius:10,fillColor:"red",fillOpacity:1},this.centerMarkStyles)});this.vectorLayer=new OpenLayers.Layer.Vector("Center Symbol",{styleMap:a,alwaysInRange:!0});this.map.addLayer(this.vectorLayer)}},showError:function(a,b){b=b||OpenLayers.i18n("mf.error");
Ext.Msg.alert(b,a)},destroyLayer:function(){var a=this.vectorLayer;a&&(a.destroy(),this.vectorLayer=null)},destroyResources:function(){this.destroyLayer()}});Ext.namespace("mapfish.widgets","mapfish.widgets.recenter");mapfish.widgets.recenter.Coords=function(a){Ext.apply(this,a);mapfish.widgets.recenter.Coords.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.recenter.Coords,mapfish.widgets.recenter.Base,{addItems:function(){this.removeAll();this.add({xtype:"numberfield",fieldLabel:OpenLayers.i18n("mf.recenter.x"),name:"coordx"});this.add({xtype:"numberfield",fieldLabel:OpenLayers.i18n("mf.recenter.y"),name:"coordy"});this.scales&&this.addScaleCombo();this.addRecenterButton()},recenter:function(){var a=this.getForm().getValues(),b=a.coordx,c=a.coordy;if(this.checkCoords(b,c)){var d;this.scales&&a.scaleValue&&(resolution=OpenLayers.Util.getResolutionFromScale(a.scaleValue,
this.map.units),d=this.map.getZoomForResolution(resolution));this.recenterOnCoords(b,c,d)}},checkCoords:function(a,b){if(!a||!b)return this.showError(OpenLayers.i18n("mf.recenter.missingCoords")),!1;var c=this.map.maxExtent;return a<c.left||a>c.right||b<c.bottom||b>c.top?(this.showError(OpenLayers.i18n("mf.recenter.outOfRangeCoords",{myX:a,myY:b,coordX:OpenLayers.i18n("mf.recenter.x"),coordY:OpenLayers.i18n("mf.recenter.y"),minCoordX:c.left,maxCoordX:c.right,minCoordY:c.bottom,maxCoordY:c.top})),
!1):!0}});Ext.reg("coordsrecenter",mapfish.widgets.recenter.Coords);Ext.namespace("mapfish.widgets","mapfish.widgets.recenter");mapfish.widgets.recenter.DataField=function(a){Ext.apply(this,a);!this.protocol&&this.url&&(this.protocol=new mapfish.Protocol.MapFish({url:this.url,params:{no_geom:!0,limit:this.limit}}));mapfish.widgets.recenter.DataField.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.recenter.DataField,mapfish.widgets.recenter.Base,{protocol:null,url:null,limit:10,fieldLabel:null,displayField:null,queryParam:null,addItems:function(){this.removeAll();var a=new Ext.data.Store({reader:new GeoExt.data.FeatureReader({},[{name:this.displayField}]),proxy:new GeoExt.data.ProtocolProxy({protocol:this.protocol})}),b=new Ext.form.ComboBox({fieldLabel:this.fieldLabel,name:this.displayField,mode:"remote",minChars:2,typeAhead:!0,forceSelection:!0,hideTrigger:!0,displayField:this.displayField,
emptyText:OpenLayers.i18n("mf.recenter.emptyText"),queryParam:this.queryParam||this.displayField,store:a,listeners:{select:function(a,b){this.onComboSelect(b)},specialkey:function(a,b){if(b.getKey()==b.ENTER)this.onComboSelect(record)},scope:this}});this.add(b);a.on({beforeload:function(a,d){d.filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,property:b.queryParam,value:".*"+a.baseParams[b.queryParam]+".*"});delete a.baseParams[b.queryParam]},scope:this})},onComboSelect:function(a){a=
a.get("feature");a.geometry instanceof OpenLayers.Geometry.Point&&this.defaultZoom?this.recenterOnCoords(a.geometry.x,a.geometry.y):(a=a.bounds||a.geometry.getBounds(),this.recenterOnBbox(a))}});Ext.reg("datafieldrecenter",mapfish.widgets.recenter.DataField);Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.FeatureReader=function(a,b){a=a||{};mapfish.widgets.data.FeatureReader.superclass.constructor.call(this,a,b||a.fields)};
Ext.extend(mapfish.widgets.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(a){return this.readRecords(a.features)},readRecords:function(a){var b=[];if(a){var c=this.recordType,d=c.prototype.fields,e,f,h,g,j,n,k,l;e=0;for(f=a.length;e<f;e++){j=a[e];n={};if(j.attributes){h=0;for(g=d.length;h<g;h++)k=d.items[h],l=j.attributes[k.mapping||k.name]||k.defaultValue,l=k.convert(l),n[k.name]=l}n.feature=j;n.state=j.state;n.fid=j.fid;b[b.length]=new c(n,j.id)}}return{records:b,totalRecords:null!=
this.totalRecords?this.totalRecords:b.length}}});Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.FeatureStore=function(a){mapfish.widgets.data.FeatureStore.superclass.constructor.call(this,{reader:new mapfish.widgets.data.FeatureReader(a,a.fields)})};Ext.extend(mapfish.widgets.data.FeatureStore,Ext.data.Store,{fields:null});Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.FeatureStoreMediator=function(a){Ext.apply(this,a);this.store||OpenLayers.Console.error("store is missing in the config");this.store.reader instanceof mapfish.widgets.data.FeatureReader||this.store.reader instanceof GeoExt.data.FeatureReader||OpenLayers.Console.error("store does not use a FeatureReader")};
mapfish.widgets.data.FeatureStoreMediator.prototype={store:null,append:!0,filter:null,addFeatures:function(a,b){Ext.isArray(a)||(a=[a]);var b=OpenLayers.Util.applyDefaults(b,{append:this.append,filter:this.filter}),c=a;if(b.filter)for(var c=[],d,e=0,f=a.length;e<f;e++)d=a[e],b.filter(d)&&c.push(d);b.append||this.store.removeAll();this.store.loadData(c,!0)},removeFeatures:function(a){if(a){Ext.isArray(a)||(a=[a]);for(var b=0,c=a.length;b<c;b++){var d=this.store.getById(a[b].id);void 0!==d&&this.store.remove(d)}}else this.store.removeAll()}};Ext.namespace("mapfish.widgets","mapfish.widgets.data");
mapfish.widgets.data.SearchStoreMediator=function(a){var b=a.store;delete a.store;Ext.apply(this,a);this.protocol||OpenLayers.Console.error("config does not include a protocol property");"mapfish.Protocol.TriggerEventDecorator"!=this.protocol.CLASS_NAME&&OpenLayers.Console.error("the protocol config property does not reference a TriggerEventDecorator protocol");this.featureStoreMediator=new mapfish.widgets.data.FeatureStoreMediator({store:b});this.autoActivate&&this.activate()};
mapfish.widgets.data.SearchStoreMediator.prototype={protocol:null,append:!0,filter:null,autoActivate:!0,active:!1,featureStoreMediator:null,activate:function(){return!this.active?(this.protocol.events.on({crudfinished:this.onSearchfinished,clear:this.onClear,scope:this}),this.active=!0):!1},deactivate:function(){return this.active?(this.protocol.events.un({crudfinished:this.onSearchfinished,clear:this.onClear,scope:this}),this.active=!1,!0):!1},onSearchfinished:function(a){"read"==a.requestType&&
a.success()&&(a=a.features)&&this.featureStoreMediator.addFeatures(a,{append:this.append,filter:this.filter})},onClear:function(){this.featureStoreMediator.removeFeatures()}};Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.LayerStoreMediator=function(a){var b=a.store;delete a.store;Ext.apply(this,a);this.layer||OpenLayers.Console.error("layer is missing in config");this.featureStoreMediator=new mapfish.widgets.data.FeatureStoreMediator({store:b});this.autoActivate&&this.activate()};
mapfish.widgets.data.LayerStoreMediator.prototype={layer:null,filter:null,autoActivate:!0,active:!1,featureStoreMediator:null,activate:function(){return!this.active?(this.layer.events.on({featuresadded:this.update,featuresremoved:this.update,featuremodified:this.update,scope:this}),this.active=!0):!1},deactivate:function(){return this.active?(this.layer.events.un({featuresadded:this.update,featuresremoved:this.update,featuremodified:this.update,scope:this}),!0):!1},update:function(){this.featureStoreMediator.addFeatures(this.layer.features,
{append:!1,filter:this.filter})}};Ext.namespace("mapfish.widgets","mapfish.widgets.data");mapfish.widgets.data.GridRowFeatureMediator=function(a){Ext.apply(this,a);this.grid?!this.selectControl||"OpenLayers.Control.SelectFeature"!=this.selectControl.CLASS_NAME?OpenLayers.Console.error("no OpenLayers.Control.SelectFeature provided"):(this.selectModel=this.grid.getSelectionModel(),this.autoActivate&&this.activate()):OpenLayers.Console.error("no Ext.grid.GridPanel provided")};
mapfish.widgets.data.GridRowFeatureMediator.prototype={autoActivate:!0,selectControl:null,grid:null,selectModel:null,active:!1,activate:function(){return!this.active?(this.featureEventsOn(),this.rowEventsOn(),this.active=!0):!1},deactivate:function(){return this.active?(this.featureEventsOff(),this.rowEventsOff(),this.active=!1,!0):!1},featureSelected:function(a){if(a=this.grid.store.getById(a.feature.id))this.rowEventsOff(),this.selectModel.selectRecords([a]),this.rowEventsOn(),this.grid.getView().focusRow(this.grid.store.indexOf(a))},
featureUnselected:function(a){if(a=this.grid.store.getById(a.feature.id))this.rowEventsOff(),this.selectModel.deselectRow(this.grid.store.indexOf(a)),this.rowEventsOn()},rowSelected:function(a,b,c){for(var a=this.selectControl.layers||[this.selectControl.layer],d,b=0,e=a.length;b<e;b++)if(d=a[b].getFeatureById(c.id)){this.featureEventsOff();this.selectControl.select(d);this.featureEventsOn();break}},rowDeselected:function(a,b,c){for(var a=this.selectControl.layers||[this.selectControl.layer],d,b=
0,e=a.length;b<e;b++)if(d=a[b].getFeatureById(c.id))this.featureEventsOff(),this.selectControl.unselect(d),this.featureEventsOn()},rowEventsOff:function(){this.selectModel.un("rowselect",this.rowSelected,this);this.selectModel.un("rowdeselect",this.rowDeselected,this)},rowEventsOn:function(){this.selectModel.on("rowselect",this.rowSelected,this);this.selectModel.on("rowdeselect",this.rowDeselected,this)},featureEventsOff:function(){for(var a=this.selectControl.layers||[this.selectControl.layer],b=
0,c=a.length;b<c;b++)a[b].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this})},featureEventsOn:function(){for(var a=this.selectControl.layers||[this.selectControl.layer],b=0,c=a.length;b<c;b++)a[b].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this})}};Ext.namespace("mapfish.widgets","mapfish.widgets.geostat");
mapfish.widgets.geostat.Choropleth=Ext.extend(Ext.FormPanel,{layer:null,format:null,url:null,featureSelection:!0,nameAttribute:null,indicator:null,indicatorText:null,coreComp:null,classificationApplied:!1,ready:!1,border:!1,loadMask:!1,labelGenerator:null,initComponent:function(){this.items=[{xtype:"combo",fieldLabel:"Indicator",name:"indicator",editable:!1,valueField:"value",displayField:"text",mode:"local",emptyText:"Select an indicator",triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value",
"text"],data:this.indicators}),listeners:{select:{fn:function(){this.classify(!1)},scope:this}}},{xtype:"combo",fieldLabel:"Method",name:"method",hiddenName:"method",editable:!1,valueField:"value",displayField:"text",mode:"local",emptyText:"Select a method",triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value","text"],data:[["CLASSIFY_BY_EQUAL_INTERVALS","Equal Intervals"],["CLASSIFY_BY_QUANTILS","Quantils"]]}),listeners:{select:{fn:function(){this.classify(!1)},scope:this}}},{xtype:"combo",
fieldLabel:"Number of classes",name:"numClasses",editable:!1,valueField:"value",displayField:"value",mode:"local",value:5,triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value"],data:[[0],[1],[2],[3],[4],[5],[6],[7],[8],[9]]}),listeners:{select:{fn:function(){this.classify(!1)},scope:this}}},{xtype:"colorfield",fieldLabel:"Color",name:"colorA",width:100,allowBlank:!1,value:"#FFFF00",listeners:{valid:{fn:function(){this.classify(!1)},scope:this}}},{xtype:"colorfield",fieldLabel:"Color",
name:"colorB",width:100,allowBlank:!1,value:"#FF0000",listeners:{valid:{fn:function(){this.classify(!1)},scope:this}}}];mapfish.widgets.geostat.Choropleth.superclass.initComponent.apply(this)},requestSuccess:function(){this.ready=!0;this.loadMask&&this.rendered&&this.loadMask.hide()},requestFailure:function(){OpenLayers.Console.error("Ajax request failed")},getColors:function(){var a=new mapfish.ColorRgb;a.setFromHex(this.form.findField("colorA").getValue());var b=new mapfish.ColorRgb;b.setFromHex(this.form.findField("colorB").getValue());
return[a,b]},classify:function(a){if(this.ready){var b={};this.indicator=this.form.findField("indicator").getValue();this.indicatorText=this.form.findField("indicator").getRawValue();b.indicator=this.indicator;b.indicator?(b.method=this.form.findField("method").getValue(),b.method?(b.method=mapfish.GeoStat.Distribution[b.method],b.numClasses=this.form.findField("numClasses").getValue(),b.colors=this.getColors(),this.coreComp.updateOptions(b),this.coreComp.applyClassification(),this.classificationApplied=
!0):a&&Ext.MessageBox.alert("Error","You must choose a method")):a&&Ext.MessageBox.alert("Error","You must choose an indicator")}else a&&Ext.MessageBox.alert("Error","Component init not complete")},onRender:function(a,b){mapfish.widgets.geostat.Choropleth.superclass.onRender.apply(this,arguments);this.loadMask&&(this.loadMask=new Ext.LoadMask(this.bwrap,this.loadMask),this.loadMask.show());var c={layer:this.layer,format:this.format,url:this.url,requestSuccess:this.requestSuccess.createDelegate(this),
requestFailure:this.requestFailure.createDelegate(this),featureSelection:this.featureSelection,nameAttribute:this.nameAttribute,legendDiv:this.legendDiv,labelGenerator:this.labelGenerator};this.coreComp=new mapfish.GeoStat.Choropleth(this.map,c)}});Ext.reg("choropleth",mapfish.widgets.geostat.Choropleth);Ext.namespace("mapfish.widgets","mapfish.widgets.geostat");
mapfish.widgets.geostat.ProportionalSymbol=Ext.extend(Ext.FormPanel,{layer:null,format:null,url:null,featureSelection:!0,nameAttribute:null,indicator:null,indicatorText:null,coreComp:null,classificationApplied:!1,ready:!1,border:!1,loadMask:!1,initComponent:function(){this.items=[{xtype:"combo",fieldLabel:"Indicator",name:"indicator",editable:!1,valueField:"value",displayField:"text",mode:"local",emptyText:"select an indicator",triggerAction:"all",store:new Ext.data.SimpleStore({fields:["value","text"],
data:this.indicators})},{xtype:"numberfield",fieldLabel:"Min Size",name:"minSize",width:30,value:2,maxValue:20},{xtype:"numberfield",fieldLabel:"Max Size",name:"maxSize",width:30,value:20,maxValue:50}];this.buttons=[{text:"OK",handler:this.classify,scope:this}];mapfish.widgets.geostat.ProportionalSymbol.superclass.initComponent.apply(this)},requestSuccess:function(){this.ready=!0;this.loadMask&&this.rendered&&this.loadMask.hide()},requestFailure:function(){OpenLayers.Console.error("Ajax request failed")},
classify:function(){if(this.ready)if(this.indicator=this.form.findField("indicator").getValue(),this.indicatorText=this.form.findField("indicator").getRawValue(),this.indicator){var a=this.form.findField("minSize").getValue(),b=this.form.findField("maxSize").getValue();this.coreComp.updateOptions({indicator:this.indicator,minSize:a,maxSize:b});this.coreComp.applyClassification();this.classificationApplied=!0}else Ext.MessageBox.alert("Error","You must choose an indicator");else exception&&Ext.MessageBox.alert("Error",
"Component init not complete")},onRender:function(a,b){mapfish.widgets.geostat.Choropleth.superclass.onRender.apply(this,arguments);this.loadMask&&(this.loadMask=new Ext.LoadMask(this.bwrap,this.loadMask),this.loadMask.show());this.coreComp=new mapfish.GeoStat.ProportionalSymbol(this.map,{layer:this.layer,format:this.format,url:this.url,requestSuccess:this.requestSuccess.createDelegate(this),requestFailure:this.requestFailure.createDelegate(this),featureSelection:this.featureSelection,nameAttribute:this.nameAttribute})}});
Ext.reg("proportionalsymbol",mapfish.widgets.geostat.ProportionalSymbol);Ext.namespace("mapfish.widgets");
mapfish.widgets.RadioTreeNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{renderElements:function(a,b,c,d){this.indentMarkup=a.parentNode?a.parentNode.ui.getChildIndent():"";var e="boolean"==typeof b.checked,f=a.attributes.radioGrp||"radioGrp",b=['<li class="x-tree-node"><div ext:tree-node-id="',a.id,'" class="x-tree-node-el x-tree-node-leaf x-unselectable ',b.cls,'" unselectable="on"><span class="x-tree-node-indent">',this.indentMarkup,'</span><img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow" /><img src="',b.icon||
this.emptyIcon,'" class="x-tree-node-icon',b.icon?" x-tree-node-inline-icon":"",b.iconCls?" "+b.iconCls:"",'" unselectable="on" />',e?'<input class="x-tree-node-cb" type="radio" id="'+a.id+'" name="'+f+'" '+(b.checked?'checked="checked" />':"/>"):"",'<a hidefocus="on" class="x-tree-node-anchor" href="',b.href?b.href:Ext.isGecko?"":"#",'" tabIndex="1" ',b.hrefTarget?' target="'+b.hrefTarget+'"':"",'><span unselectable="on">',a.text,'</span></a></div><ul class="x-tree-node-ct" style="display:none;"></ul></li>'].join(""),
h;this.wrap=!0!==d&&a.nextSibling&&(h=a.nextSibling.ui.getEl())?Ext.DomHelper.insertHtml("beforeBegin",h,b):Ext.DomHelper.insertHtml("beforeEnd",c,b);this.elNode=this.wrap.childNodes[0];this.ctNode=this.wrap.childNodes[1];a=this.elNode.childNodes;this.indentNode=a[0];this.ecNode=a[1];this.iconNode=a[2];c=3;e&&(this.checkbox=a[3],c++);this.anchor=a[c];this.textNode=a[c].firstChild},_unused_renderElements:function(a,b,c,d){mapfish.widgets.RadioTreeNodeUI.superclass.renderElements.apply(this,arguments);
var e=Ext.DomQuery.selectNode(".x-tree-node-cb",this.elNode),f=a.attributes.radioGrp||"radioGrp";e.setAttribute("type","radio");e.setAttribute("id",a.id);e.setAttribute("name",f)},onRadioChange:function(){var a=this.checkbox.checked;this.node.attributes.checked=a;this.fireEvent("radiochange",this.node,a)}});
mapfish.widgets.LayerTreeEventModel=Ext.extend(Ext.tree.TreeEventModel,{delegateClick:function(a){if(this.beforeEvent(a))if(a.getTarget("input[type=checkbox]",1))this.onCheckboxClick(a,this.getNode(a));else if(a.getTarget("input[type=radio]",1))this.onRadioClick(a,this.getNode(a));else if(a.getTarget(".x-tree-ec-icon",1))this.onIconClick(a,this.getNode(a));else if(this.getNodeTarget(a))this.onNodeClick(a,this.getNode(a))},onRadioClick:function(a,b){if(b.ui.onRadioChange)b.ui.onRadioChange(a);else OpenLayers.Console.error("Invalid TreeNodeUI Class, no onRadioChange is available")}});
mapfish.widgets.LayerTree=function(a){Ext.apply(this,a);mapfish.widgets.LayerTree.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.LayerTree,Ext.tree.TreePanel,{separator:":",model:null,showWmsLegend:!1,rootVisible:!1,animate:!0,autoScroll:!0,loader:new Ext.tree.TreeLoader({}),enableDD:!1,containerScroll:!0,ascending:!0,_automaticModel:!0,layerNameToLayer:{},baseLayerNames:[],layersWithSublayers:{},layerToNodeIds:{},nodeIdToNode:{},nodeIdToLayers:{},hasCheckbox:function(a){return"boolean"==typeof a.attributes.checked},setNodeChecked:function(a,b,c){if((a=a instanceof Ext.data.Node?a:this.getNodeById(a))&&
this.hasCheckbox(a))void 0===b&&(b=!a.attributes.checked),a.attributes.checked=b,a.ui&&a.ui.checkbox&&(a.ui.checkbox.checked=b),(c||void 0===c)&&a.fireEvent("checkchange",a,b)},_updateCachedObjects:function(){this.map?(this.layerNameToLayer={},this.baseLayerNames=[],this.layersWithSublayers={},this.layerToNodeIds={},this.nodeIdToNode={},this.nodeIdToLayers={},Ext.each(this.map.layers,function(a){var b=a.name;this.layerNameToLayer[b]=a;a.isBaseLayer&&this.baseLayerNames.push(b)},this),this.getRootNode().cascade(function(a){if(!a.attributes.layerNames)return!0;
for(var b=a.attributes.layerNames,c=0;c<b.length;c++){var d=b[c];-1!=d.indexOf(this.separator)&&(d=d.split(this.separator)[0],this.layersWithSublayers[d]=!0);this.nodeIdToLayers[a.id]||(this.nodeIdToLayers[a.id]=[]);this.nodeIdToLayers[a.id].push(this.layerNameToLayer[d])}},this),this.getRootNode().cascade(function(a){var b=a.attributes.layerNames;if(b)for(var c=0;c<b.length;c++){var d=b[c];d&&(this.layerToNodeIds[d]||(this.layerToNodeIds[d]=[]),this.layerToNodeIds[d].push(a.id),this.nodeIdToNode[a.id]=
a)}},this)):OpenLayers.Console.error("map Object needs to be available when calling _updateCachedObjects")},_updateCheckboxAncestors:function(){function a(d){if(!c.hasCheckbox(d))throw Error(arguments.callee.name+" should only be called on checkbox nodes");var e=[];d.eachChild(function(a){c.hasCheckbox(a)&&e.push(a)},this);if(0==e.length)return d.attributes.checked;var g=!0;Ext.each(e,function(b){if(!a(b))return g=!1},this);c.setNodeChecked(d,g,!1);delete b[d.id];return g}var b={},c=this,d=[];this.getRootNode().cascade(function(a){this.hasCheckbox(a)&&
(d.push(a),b[a.id]=!0)},this);for(var e;e=d.shift();)b[e.id]&&a(e)},_handleModelChange:function(a,b){a&&a.cascade(function(a){this.setNodeChecked(a,b,!1)},this);this._updateCheckboxAncestors();if(this.map){this._updateCachedObjects();var c;this.map.baseLayer&&(c=this.map.baseLayer.name);var d,e={},f=[],h,g={};Ext.each(this.map.layers,function(a){var b=a.name;g[b]=a.visibility;if((a instanceof OpenLayers.Layer.WMS||a instanceof OpenLayers.Layer.WMS.Untiled||a instanceof OpenLayers.Layer.MapServer)&&
this.layersWithSublayers[a.name]){a.isBaseLayer&&OpenLayers.Console.error("Using sublayers on a base layer is not supported (base layer is "+b+")");if(!a._origLayers)a._origLayers=a.params.LAYERS||a.params.layers;var c=a._origLayers;if(c instanceof Array)for(var d=0;d<c.length;d++)g[b+this.separator+c[d]]=a.visibility}},this);var j=g,n={};this.getRootNode().cascade(function(b){var c=b.attributes.checked,h=b.attributes.layerNames,g=null;if(h)for(var k=0;k<h.length;k++){var l=h[k];if(l){j[l]==void 0&&
OpenLayers.Console.error("Invalid layer: ",l);if(b.attributes.radio){g=b.attributes.radioGrp||"radioGrp";e[g]||(e[g]={});e[g][l]=c}if(!n[l]){if(b==a){this.baseLayerNames.indexOf(l)!=-1&&(d=l);if(g){f[0]=g;f[1]=l}n[l]=true}j[l]=c}}}},this);h=j;for(var k=h,l=d,s=0,r=0;r<this.baseLayerNames.length;r++)k[this.baseLayerNames[r]]&&s++;if(1!=s){for(r=0;r<this.baseLayerNames.length;r++)k[this.baseLayerNames[r]]=!1;l?k[l]=!0:c&&(k[c]=!0)}var k=h,m;for(m in e)for(var p in e[m])k[p]=f[0]==m?p==f[1]:e[m][p];
m=h;for(var q in m)if(p=this.layerToNodeIds[q])for(k=0;k<p.length;k++)if(l=this.nodeIdToNode[p[k]])if(c=l.attributes.layerNames){s=!0;for(r=0;r<c.length;r++)if((q=c[r])&&!m[q]){s=!1;break}this.setNodeChecked(l,s,!1)}else OpenLayers.Console.error("unexpected state");a:{m=h;h={};for(var o in m)q=m[o],p=o.split(this.separator),2==p.length&&(delete m[o],o=p[0],p=p[1],h[o]||(h[o]=[]),q&&h[o].push(p));for(o in h)void 0!==m[o]&&delete m[o];for(o in m)(q=this.layerNameToLayer[o])?-1!=this.baseLayerNames.indexOf(o)?
m[o]&&this.map.setBaseLayer(q):q.setVisibility(m[o]):OpenLayers.Console.error("Non existing layer name",o);for(o in h){q=this.layerNameToLayer[o];m=h[o];if(q.isBaseLayer){OpenLayers.Console.error("base layer for sublayer are not supported");break a}if(0==m.length)q.setVisibility(!1,!0);else{if(!this.enableDD){q._origLayers||OpenLayers.Console.error("Assertion failure");p=q._origLayers;k=[];for(l=0;l<p.length;l++)c=p[l],-1!=m.indexOf(c)&&k.push(c);m=k}p=q.params.LAYERS?"LAYERS":"layers";mapfish.Util.arrayEqual(q.params[p],
m)||(k={},k[p]=m,q.mergeNewParams(k));q.setVisibility(!0,!0)}}}}},_extractOLModel:function(){var a=[],b=this.map.layers.slice();this.ascending||b.reverse();for(var c=0;c<b.length;c++){var d=b[c],e=[];if(d instanceof OpenLayers.Layer.WMS||d instanceof OpenLayers.Layer.WMS.Untiled||d instanceof OpenLayers.Layer.MapServer){var f=d.params.LAYERS||d.params.layers;if(f instanceof Array)for(var h=0;h<f.length;h++){var g=f[h],j;this.showWmsLegend&&(j=mapfish.Util.getIconUrl(d.url,{layer:g}));g={text:g,checked:d.getVisibility(),
icon:j,layerName:d.name+this.separator+g,children:[],cls:"cf-wms-node"};this.ascending?e.push(g):e.unshift(g)}}e={text:d.name,checked:d.getVisibility(),layerName:0<e.length?null:d.name,children:e};d.displayInLayerSwitcher||(e.uiProvider=function(){},e.hidden=!0,e.uiProvider.prototype={render:function(){},renderIndent:function(){},updateExpandIcon:function(){}});a.push(e)}return a},_updateOrder:function(){this._updateCachedObjects();var a=this.map.layers.slice(),b={},c=[];this.getRootNode().cascade(function(a){this.ascending?
c.push(a):c.unshift(a)},this);Ext.each(c,function(c){(c=this.nodeIdToLayers[c.id])&&Ext.each(c,function(c){c=c.name;if(!b[c]){b[c]=!0;var d;a:{for(d=0;d<a.length;d++)if(a[d].name==c)break a;d=-1}if(-1==d||!this.layerNameToLayer[c])throw Error("Layer "+c+" not available");a.splice(d,1);a.push(this.layerNameToLayer[c])}},this)},this);this._updateCheckboxAncestors();this.map.layers=a;for(var d=0;d<this.map.layers.length;d++)this.map.setLayerZIndex(this.map.layers[d],d)},_fixupModel:function(){this.getRootNode().cascade(function(a){a=
a.attributes;!a.layerNames&&a.layerName&&(a.layerNames=[a.layerName],delete a.layerName)},this);this.map&&this._updateCachedObjects();this.getRootNode().cascade(function(a){var b;if(a.attributes.radio||this.map&&(b=this.nodeIdToLayers[a.id])){var c=!1,d=!1;b?(c=!0,Ext.each(b,function(a){a.isBaseLayer||(c=!1);a.displayInLayerSwitcher&&(d=!0)},this)):d=!0;if((c||a.attributes.radio)&&d)a.attributes.uiProvider=mapfish.widgets.RadioTreeNodeUI,a.ui&&(a.ui=new mapfish.widgets.RadioTreeNodeUI(a))}},this)},
initComponent:function(){function a(b){var d=new Ext.tree.TreeNode(b),b=b.children;d.leaf=!b;if(!b)return d;for(var e=0;e<b.length;e++)b[e]&&d.appendChild(a(b[e]));return d}this.eventModel=new mapfish.widgets.LayerTreeEventModel(this);mapfish.widgets.LayerTree.superclass.initComponent.call(this);this.addListener("checkchange",function(a,b){this._handleModelChange(a,b)},this);this.addListener("radiochange",function(a,b){this._handleModelChange(a,b)},this);this._automaticModel=!this.model;this.model||
(this.model=this._extractOLModel());var b=a({text:"Root",draggable:!1,id:"source",children:this.model,leaf:!1});this.setRootNode(b);this._fixupModel();this.enableDD&&(this.addListener("dragdrop",function(){this._updateOrder(arguments)},this),this.addListener("nodedragover",this.isDragAllowed,this));this._automaticModel||(this._handleModelChange(null,null),this.enableDD&&this._updateOrder())},isDragAllowed:function(a){var b=a.data.node,c=a.target;if("above"==a.point||"below"==a.point)c=c.parentNode;
return b.parentNode!=c?!1:!0},onRender:function(a,b){this.el||(this.el=document.createElement("div"));mapfish.widgets.LayerTree.superclass.onRender.apply(this,arguments)}});Ext.reg("layertree",mapfish.widgets.LayerTree);mapfish.widgets.LayerTree.getNodeLayers=function(a,b){var c=[];b.cascade(function(b){(b=a.nodeIdToLayers[b.id])&&(c=c.concat(b))});return c};
mapfish.widgets.LayerTree.removeNode=function(a,b){b.cascade(function(b){if(b.attributes&&b.attributes.layerNames)for(var b=b.attributes.layerNames,c=0;c<b.length;++c){var d=b[c].split(a.separator),g=a.layerNameToLayer[d[0]],d=d[1],j;j=g.params.LAYERS?g.params.LAYERS=mapfish.Util.fixArray(g.params.LAYERS):g.params.layers=mapfish.Util.fixArray(g.params.layers);d&&j&&j.remove(d);!d||!j||0==j.length?g.destroy():g.redraw()}});var c=b.parentNode;for(b.remove();c&&!c.hasChildNodes();){var d=c,c=c.parentNode;
d.remove()}a._updateCachedObjects()};
mapfish.widgets.LayerTree.MenuFeatures={opacitySlide:function(a,b,c){return 0==c.length?null:{text:OpenLayers.Lang.translate("mf.layertree.opacity"),menu:{plain:!0,items:[mapfish.widgets.LayerTree.MenuFeatures.opacitySlideDirect(a,b,c)]}}},opacitySlideDirect:function(a,b,c){if(0==c.length)return null;for(b=a=0;b<c.length;++b)a+=null==c[b].opacity?1:c[b].opacity;a/=c.length;return new Ext.menu.Adapter(new Ext.Slider({width:200,value:100*a,listeners:{change:function(a,b){for(var f=0;f<c.length;++f)c[f].setOpacity(b/
100)}}}))},remove:function(a,b,c){if(0==c.length)return null;for(var d=0;d<c.length;++d){var e=c[d];if(e.isBaseLayer&&e.getVisibility())return null}return{text:OpenLayers.Lang.translate("mf.layertree.remove"),handler:function(){mapfish.widgets.LayerTree.removeNode(a,b)}}},zoomToExtent:function(a,b,c){if(0==c.length)return null;for(var d=null,b=0;b<c.length;++b){var e=c[b];d?d.extend(e.maxExtent):d=e.maxExtent.clone()}return{text:OpenLayers.Lang.translate("mf.layertree.zoomToExtent"),handler:function(){a.map.zoomToExtent(d)}}}};
mapfish.widgets.LayerTree.createContextualMenuPlugin=function(a){return{init:function(b){function c(c,e){for(var f=mapfish.widgets.LayerTree.getNodeLayers(b,c),h=[],g=0;g<a.length;++g){var j=(0,mapfish.widgets.LayerTree.MenuFeatures[a[g]])(b,c,f);j&&h.push(j)}if(0<h.length){var n=new Ext.menu.Menu({ignoreParentClick:!0,defaults:{scope:b},items:h});n.showAt(e.getXY());n.on("hide",function(){n.destroy()})}}if(Ext.isOpera)b.on("click",function(a,b){b.hasModifier()&&(b.stopEvent(),c(a,b))});else b.on("contextMenu",
function(a,b){b.stopEvent();c(a,b)})}}};mapfish.widgets.LayerTree.createDisableLayersPlugin=function(a){return{init:function(b){if(b.map)b.map.events.on({zoomend:function(){function c(d,e){if(e)d.disable();else{var f=b.map.getScale(),f=f*a/OpenLayers.DOTS_PER_INCH;f<d.attributes.minScale||f>d.attributes.maxScale?(d.disable(),e=!0):(d.enable(),e=!1)}d.eachChild(function(a){c(a,e)})}c(b.root,!1)}})}}};Ext.namespace("mapfish.widgets.toolbar");mapfish.widgets.toolbar.Toolbar=function(a){Ext.apply(this,a);mapfish.widgets.toolbar.Toolbar.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.toolbar.Toolbar,Ext.Toolbar,{controls:null,state:null,configurable:!1,_buttons:null,initComponent:function(){mapfish.widgets.toolbar.Toolbar.superclass.initComponent.call(this);this.controls=[];this._buttons=[];this.autoHeight=this.autoWidth=!0;Ext.QuickTips.init()},addControl:function(a,b){a.visible=!0;this.controls.push(a);a.map||this.map.addControl(a);var c=new Ext.Toolbar.Button(b);c.tooltip||(c.tooltip=a.title);c.enableToggle=a.type!=OpenLayers.Control.TYPE_BUTTON;
a.isDefault&&(c.pressed=!0);if(a.type==OpenLayers.Control.TYPE_BUTTON)c.on("click",a.trigger,a);else c.on("toggle",function(b,c){this.toggleHandler(a,c)},this),a.events.on({activate:this.onControlActivate,deactivate:this.onControlDeactivate,scope:this});this.add(c);this._buttons.push(c);return c},removeControl:function(a){var b=this.getButtonForControl(a);b.destroy();OpenLayers.Util.removeItem(this._buttons,b);a.events.un({activate:this.onControlActivate,deactivate:this.onControlDeactivate,scope:this});
this.map.removeControl(a);OpenLayers.Util.removeItem(this.controls,a)},onControlActivate:function(a){this.getButtonForControl(a.object).toggle(!0)},onControlDeactivate:function(a){a=this.getButtonForControl(a.object);a.toggle(!1);this.checkDefaultControl(a)},getControlByClassName:function(a){if(this.controls)for(var b=0;b<this.controls.length;b++)if(this.controls[b].CLASS_NAME==a)return this.controls[b];return null},getButtonForControl:function(a){if(this.controls)for(var b=0;b<this.controls.length;b++)if(this.controls[b]==
a)return this._buttons[b];return null},activate:function(){if(this.configurable){this.applyState(this.state);var a=new Ext.Toolbar.Button({text:"+"});a.menu=new Ext.menu.Menu;for(var b=0;b<this.controls.length;b++)a.menu.add({style:"height:25px",text:'<div style="position: relative; left: 25px; top: -15px;" class="'+this._buttons[b].iconCls+'"/>',checked:this.controls[b].visible,scope:{toolbar:this,button:this._buttons[b],control:this.controls[b]},checkHandler:function(a,b){b?(this.control.visible=
!0,this.control.isDefault&&this.control.activate(),this.button.show()):(this.control.visible=!1,this.control.deactivate(),this.button.hide());this.toolbar.saveState()}});this.add(a)}else for(a=0;a<this.controls.length;a++)b=this.controls[a],b.isDefault&&b.activate()},deactivate:function(){for(var a=0;a<this.controls.length;a++)this.controls[a].deactivate()},applyState:function(a){if(!a)return!1;this.state=a;if(a=a.controls)for(var b=0,c=a.length;b<c;b++){var d=a[b],e=this.getControlByClassName(d.id);
e&&(e.visible=d.visible,e.visible||this._buttons[b].hide())}},getState:function(){for(var a={controls:[]},b=0,c;b<this.controls.length;b++)c=this.controls[b],a.controls[b]={id:c.CLASS_NAME,visible:c.visible};return a},toggleHandler:function(a,b){b!=a.active&&(b?a.activate():a.deactivate())},checkDefaultControl:function(a){if(a=a.toggleGroup){for(var b=null,c=0;c<this.controls.length;c++)if(this._buttons[c].toggleGroup==a){var d=this.controls[c];if(d.active)return;d.isDefault&&(b=d)}b&&b.activate()}}});
Ext.reg("toolbar",mapfish.widgets.toolbar.Toolbar);Ext.namespace("mapfish.widgets.toolbar");mapfish.widgets.toolbar.CheckItem=function(a){Ext.apply(this,a);mapfish.widgets.toolbar.CheckItem.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.toolbar.CheckItem,Ext.menu.CheckItem,{controlAdded:!1,olHandler:null,initComponent:function(){mapfish.widgets.toolbar.CheckItem.superclass.initComponent.call(this);Ext.QuickTips.init();this.control&&(this.scope=this,this.checkHandler=this.handleChecked)},handleChecked:function(a,b){this.controlAdded||(this.map.addControl(this.control),this.controlAdded=!0);b?this.olHandler?(this.control.deactivate(),eval("this.control."+this.olHandler+".activate();")):this.control.div&&
(this.control.div.style.display="block"):this.olHandler?this.control.deactivate():this.control.div&&(this.control.div.style.display="none");this.saveState()},getState:function(){return{className:this.control.CLASS_NAME,olHandler:this.olHandler,active:this.checked}},applyState:function(a){if(!a)return!1;this.control.CLASS_NAME==a.className&&this.olHandler==a.olHandler?this.checked=a.active:this.control.CLASS_NAME==a.className&&(this.checked=a.active);this.handleChecked(null,this.checked)},onRender:function(a,
b){mapfish.widgets.toolbar.CheckItem.superclass.onRender.apply(this,arguments);this.tooltip&&(this.el.dom.qtip=this.tooltip)}});Ext.reg("checkitem",mapfish.widgets.toolbar.CheckItem);Ext.namespace("mapfish.widgets.toolbar");mapfish.widgets.toolbar.MenuItem=function(a){Ext.apply(this,a);mapfish.widgets.toolbar.MenuItem.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.toolbar.MenuItem,Ext.menu.Item,{initComponent:function(){mapfish.widgets.toolbar.MenuItem.superclass.initComponent.call(this);Ext.QuickTips.init();this.control&&(this.scope=this,this.handler=function(){this.control.trigger()})},onRender:function(a,b){mapfish.widgets.toolbar.MenuItem.superclass.onRender.apply(this,arguments);this.tooltip&&(this.el.dom.qtip=this.tooltip)}});Ext.reg("menuitem",mapfish.widgets.toolbar.MenuItem);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.editing");mapfish.widgets.editing.FeatureList=function(a){Ext.apply(this,a,{sm:new Ext.grid.RowSelectionModel({singleSelect:!0}),clicksToEdit:1,enableDragDrop:!0});mapfish.widgets.editing.FeatureList.superclass.constructor.call(this)};
Ext.extend(mapfish.widgets.editing.FeatureList,Ext.grid.EditorGridPanel,{featureType:null,map:null,layer:null,automaticMode:!1,autoFocusMode:2,displayNotEdited:!0,editGeometryVisual:function(a,b,c){return a?c?"->":"X":""},isDnd:!1,colDefs:null,modifyFeature:null,initComponent:function(){function a(a,d){if(b.displayNotEdited)for(var e=0;e<d.length;++e)b.addGeometries(d[e]);return!0}!this.map&&!this.layer&&OpenLayers.Console.error("Mandatory param for FeatureList missing: layer and/or map");this.featureType||
OpenLayers.Console.error("Mandatory param for FeatureList missing: featureType");this.colDefs=this.columns;mapfish.widgets.editing.FeatureList.superclass.initComponent.call(this);this.setGeoColRenderer();this.map?this.layer||(this.layer=new OpenLayers.Layer.Vector("Geometry editing"),this.map.addLayer(this.layer)):this.map=this.layer.map;var b=this;this.addEvents({geomodifstart:!0,geomodif:!0,geomodifend:!0});this.modifyFeature=new OpenLayers.Control.ModifyFeature(this.layer,{mode:OpenLayers.Control.ModifyFeature.RESHAPE|
OpenLayers.Control.ModifyFeature.DRAG,onModificationStart:function(a){b.automaticMode||this.activate();b.refreshGeometryVisual(a.data);var d=a.data,e=b.getStore().findBy(function(a){return a.id==d.id});b.getView().focusCell(e,0);b.getSelectionModel().selectRange(e,e);b.fireEvent("geomodifstart",b,d,a)},onModification:function(a){b.fireEvent("geomodif",b,a.data,a)},onModificationEnd:function(a){b.automaticMode||this.deactivate();a.data&&b.refreshGeometryVisual(a.data);b.displayNotEdited||b.layer.removeFeatures(a);
b.fireEvent("geomodifend",b,a.data,a)}});this.map.addControl(this.modifyFeature);this.getStore().on("remove",function(a,b){this.removeGeometries(b)},this);this.getStore().on("clear",function(a){a.each(this.removeGeometries,this)},this);this.getStore().on("add",a);this.getStore().on("load",function(b,d,e){if(!e.add){this.modifyFeature.feature&&this.modifyFeature.selectControl.unselect(this.modifyFeature.feature);this.clearLayer()}a(b,d,0);return true},this)},onRender:function(){mapfish.widgets.editing.FeatureList.superclass.onRender.apply(this,
arguments);var a=this;new Ext.dd.DropTarget(this.getView().mainBody,{ddGroup:"GridDD",notifyOver:function(a,c){return"undefined"!=typeof a.getDragData(c).rowIndex?this.dropAllowed:this.dropNotAllowed},notifyDrop:function(b,c,d){b=b.getDragData(c);c=b.rowIndex;if("undefined"!=typeof c){var e=d.selections[0];a.isDnd=!0;d.grid.store.remove(e);b.grid.store.insert(c,e);a.isDnd=!1;return!0}return!1}});this.displayNotEdited&&this.drawAllFeatures()},eachGeoColumn:function(a){for(var b=0;b<this.colDefs.length;++b){var c=
this.colDefs[b],d=this.featureType.prototype.fields.get(c.dataIndex);"geo"==d.type&&a.call(this,c,d,b)}},setGeoColRenderer:function(){this.eachGeoColumn(function(a,b){a.renderer=OpenLayers.Function.bind(function(a,b,e){return a?(b=null!=this.grid.modifyFeature.feature&&this.grid.getFeatureByGeometry(a)==this.grid.modifyFeature.feature,"<div onclick=\"mapfish.widgets.editing.FeatureList.geometryClickHandler('"+this.grid.id+"', "+e.id+", '"+this.colName+"');\">"+this.grid.editGeometryVisual(a,e,b)+
"</div>"):this.grid.editGeometryVisual(a,e,!1)},{grid:this,colName:b.name})})},drawAllFeatures:function(){this.clearLayer();if(this.displayNotEdited){var a=[];this.eachGeoColumn(function(b,c){this.store.each(function(b){var e=b.get(c.name);e&&!this.getFeatureByGeometry(e)&&(b=new OpenLayers.Feature.Vector(e,b),a.push(b))},this)});this.layer.addFeatures(a)}},addGeometries:function(a){var b=this.layer;this.eachGeoColumn(function(c,d){var e=a.get(d.name);e&&!this.getFeatureByGeometry(e)&&(e=new OpenLayers.Feature.Vector(e,
a),b.addFeatures(e))})},removeGeometries:function(a){this.eachGeoColumn(function(b,c){var d=a.get(c.name);if(d&&(d=this.getFeatureByGeometry(d)))d==this.modifyFeature.feature&&(d.data=null,this.modifyFeature.selectControl.unselect(d)),this.layer.removeFeatures([d]),d.destroy()});return!0},getFeatureByGeometry:function(a){for(var b=this.layer.features,c=0;c<b.length;++c){var d=b[c];if(d.geometry==a)return d}return null},editFirstGeometry:function(a){if(!this.automaticMode){for(var b,c=0;c<this.colDefs.length;++c){var d=
this.featureType.prototype.fields.get(this.colDefs[c].dataIndex);if("geo"==d.type){b=d.name;break}}this.editGeometry(a,b,!1)}},editGeometry:function(a,b,c){if(b=a.get(b)){var d=this.getFeatureByGeometry(b);!d&&!this.displayNotEdited&&(d=new OpenLayers.Feature.Vector(b,a),this.layer.addFeatures(d));d?((a=this.modifyFeature.feature)&&this.modifyFeature.selectControl.unselect(this.modifyFeature.feature),a!=d&&(this.modifyFeature.selectControl.select(d),c&&this.manageAutoFocus(b))):OpenLayers.Console.error("BUG: cannot find vector feature for: "+
a)}},manageAutoFocus:function(a){if(1==this.autoFocusMode)this.map.zoomToExtent(a.getBounds());else if(2==this.autoFocusMode){var b=this.map.getExtent();b.extend(a.getBounds());a=0.02*b.getWidth();b.left+=a;b.right-=a;b.top-=a;b.bottom+=a;this.map.zoomToExtent(b)}},refreshGeometryVisual:function(a){this.getView().refreshRow(a)},setAutomaticMode:function(a){a!=this.automaticMode&&(this.automaticMode=a,this.modifyFeature.feature&&this.modifyFeature.selectControl.unselect(this.modifyFeature.feature),
a?this.modifyFeature.activate():this.modifyFeature.deactivate())},setDisplayNotEdited:function(a){a!=this.displayNotEdited&&((this.displayNotEdited=a)?this.drawAllFeatures():(this.clearLayer(),this.setAutomaticMode(!1)))},clearLayer:function(){for(var a=[],b=this.layer,c=this.modifyFeature.feature,d=0;d<b.features.length;++d){var e=b.features[d];e!=c&&(e.data&&e.data.endEdit)&&a.push(e)}b.removeFeatures(a)}});Ext.reg("featurelist",mapfish.widgets.editing.FeatureList);
mapfish.widgets.editing.FeatureList.geometryClickHandler=function(a,b,c){var d=Ext.getCmp(a);d?(a=d.store.getById(b))?d.editGeometry(a,c,!0):OpenLayers.Console.error("Cannot find record with id="+b):OpenLayers.Console.error("Cannot find grid with id="+a)};
mapfish.widgets.editing.FeatureList.createRecord=function(a){for(var b=0;b<a.length;++b){var c=a[b];if("geo"==c.type&&(c.convert||(c.convert=function(a){return a}),!c.sortType))c.sortType=Ext.data.SortTypes.none()}return Ext.data.Record.create.apply(null,arguments)};Ext.namespace("mapfish.widgets","mapfish.widgets.editing");mapfish.widgets.editing.BaseProperty=function(a){Ext.apply(this,a)};mapfish.widgets.editing.BaseProperty.prototype={label:null,name:null,type:null,showInGrid:!1,defaultValue:null,extFieldCfg:null,getRecordType:function(){return{name:this.name,type:this.type}},getExtField:function(){OpenLayers.Console.error("Not implemented")}};
mapfish.widgets.editing.SimpleProperty=function(a){mapfish.widgets.editing.SimpleProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.SimpleProperty,mapfish.widgets.editing.BaseProperty,{getExtField:function(){return OpenLayers.Util.applyDefaults({xtype:"textfield",fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg)}});
mapfish.widgets.editing.StringProperty=function(a){this.type="string";this.defaultValue="";mapfish.widgets.editing.StringProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.StringProperty,mapfish.widgets.editing.SimpleProperty);mapfish.widgets.editing.IntegerProperty=function(a){this.type="int";this.defaultValue=0;mapfish.widgets.editing.IntegerProperty.superclass.constructor.call(this,a)};
Ext.extend(mapfish.widgets.editing.IntegerProperty,mapfish.widgets.editing.SimpleProperty,{getExtField:function(){return OpenLayers.Util.applyDefaults({xtype:"numberfield",allowDecimals:!1,fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg)}});mapfish.widgets.editing.FloatProperty=function(a){this.type="float";this.defaultValue=0;mapfish.widgets.editing.FloatProperty.superclass.constructor.call(this,a)};
Ext.extend(mapfish.widgets.editing.FloatProperty,mapfish.widgets.editing.SimpleProperty,{getExtField:function(){return OpenLayers.Util.applyDefaults({xtype:"numberfield",fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg)}});mapfish.widgets.editing.BooleanProperty=function(a){this.type="boolean";this.defaultValue=!1;mapfish.widgets.editing.FloatProperty.superclass.constructor.call(this,a)};
Ext.extend(mapfish.widgets.editing.BooleanProperty,mapfish.widgets.editing.BaseProperty,{getExtField:function(){return new Ext.form.Checkbox(OpenLayers.Util.applyDefaults({name:this.name,fieldLabel:this.label||this.name},this.extFieldCfg))}});mapfish.widgets.editing.ComboProperty=function(a){this.type="int";mapfish.widgets.editing.ComboProperty.superclass.constructor.call(this,a)};
Ext.extend(mapfish.widgets.editing.ComboProperty,mapfish.widgets.editing.BaseProperty,{url:null,getExtField:function(){var a=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:this.url,method:"GET",disableCaching:!1}),reader:new Ext.data.JsonReader({root:"root"},[{name:"id",type:"int"},"label"])}),a=OpenLayers.Util.applyDefaults({fieldLabel:this.label||this.name,typeAhead:!0,triggerAction:"all",editable:!1,displayField:"label",valueField:"id",name:this.name,store:a,listeners:{render:{fn:function(){var a=
{};a[this.queryParam]="";this.store.load({params:a})}}}},this.extFieldCfg);return new Ext.form.ComboBox(a)}});mapfish.widgets.editing.DateProperty=function(a){this.type="string";mapfish.widgets.editing.DateProperty.superclass.constructor.call(this,a)};Ext.extend(mapfish.widgets.editing.DateProperty,mapfish.widgets.editing.BaseProperty,{getExtField:function(){return new Ext.form.DateField(OpenLayers.Util.applyDefaults({fieldLabel:this.label||this.name,name:this.name},this.extFieldCfg))}});Ext.namespace("mapfish.widgets","mapfish.widgets.editing");
mapfish.widgets.editing.FeatureEditingPanel=Ext.extend(Ext.Panel,{COMBO_NONE_VALUE:"__combo_none_value__",COMBO_NONE_NAME:OpenLayers.i18n("mf.editing.comboNoneName"),map:null,layerConfig:null,combo:null,comboConfig:null,form:null,store:null,layerStoreMediator:null,grid:null,menu:null,layer:null,currentLayerId:null,modifyFeatureControl:null,drawFeatureControl:null,importBtn:null,commitBtn:null,deleteBtn:null,attributesFormDefaults:null,initComponent:function(){this.map||OpenLayers.Console.error("map option for FeatureEditingPanel missing");
this.layerConfig||OpenLayers.Console.error("layerConfig option for FeatureEditingPanel missing");this.layout="form";this.tbar=this.createToolbar();mapfish.widgets.editing.FeatureEditingPanel.superclass.initComponent.apply(this);this.add(this.createLayerCombo());this.on("destroy",this.destroyResources,this);this.on("enable",this.setUp,this);this.on("disable",this.tearDown,this);this.on("expand",this.setUp,this);this.on("collapse",this.tearDown,this);this.on("activate",this.setUp,this);this.on("deactivate",
this.tearDown,this);this.addEvents("beforecommit","commit")},createToolbar:function(){this.importBtn=new Ext.Button({text:OpenLayers.i18n("mf.editing.import"),tooltip:OpenLayers.i18n("mf.editing.importTooltip"),disabled:!0,handler:function(){this.refreshFeatures()},scope:this});this.commitBtn=new Ext.Button({text:OpenLayers.i18n("mf.editing.commit"),tooltip:OpenLayers.i18n("mf.editing.commitTooltip"),disabled:!0,handler:function(){this.commitFeatures()},scope:this});this.deleteBtn=new Ext.Button({text:OpenLayers.i18n("mf.editing.delete"),
tooltip:OpenLayers.i18n("mf.editing.deleteTooltip"),disabled:!0,handler:function(){this.deleteFeatures()},scope:this});return new mapfish.widgets.toolbar.Toolbar({items:[this.importBtn,this.commitBtn,"-",this.deleteBtn],map:this.map})},refreshFeatures:function(){this.layer.strategies[0].update({force:!0})},commitFeatures:function(){function a(a){this.modifyFeatureControl.feature&&this.modifyFeatureControl.unselectFeature({feature:this.modifyFeatureControl.feature});this.layer.destroyFeatures(a.reqFeatures instanceof
Array?a.reqFeatures:[a.reqFeatures]);this.layer.addFeatures(a.features);a.last&&this.fireEvent("commit")}this.fireEvent("beforecommit");this.layer.protocol.commit(this.layer.features,{create:{scope:this,callback:a},update:{scope:this,callback:a},"delete":{scope:this,callback:function(a){var c=a.reqFeatures;c instanceof Array||(c=[c]);this.layer.destroyFeatures(c);a.last&&this.fireEvent("commit")}}})},deleteFeatures:function(){for(var a,b=this.layer.selectedFeatures.length-1;0<=b;b--)a=this.layer.selectedFeatures[b],
this.modifyFeatureControl.feature==a&&this.modifyFeatureControl.selectControl.unselect(a),a.state==OpenLayers.State.INSERT?this.layer.destroyFeatures([a]):(a.state=OpenLayers.State.DELETE,this.layerStoreMediator.featureStoreMediator.addFeatures(a),this.layer.drawFeature(a))},createLayerCombo:function(){var a=[[this.COMBO_NONE_VALUE,this.COMBO_NONE_NAME]],b;for(b in this.layerConfig)a.push([b,this.layerConfig[b].text]);a=new Ext.data.SimpleStore({fields:["value","text"],data:a});a=OpenLayers.Util.applyDefaults({fieldLabel:OpenLayers.i18n("mf.editing.comboLabel"),
name:"editingLayer",hiddenName:"editingLayer",displayField:"text",valueField:"value",mode:"local",triggerAction:"all",editable:!1,store:a,listeners:{select:function(a,b){this.prepareSwitchLayer(b.data.value)},scope:this}},this.comboConfig);return this.combo=new Ext.form.ComboBox(a)},prepareSwitchLayer:function(a){this.isDirty()?Ext.Msg.confirm(OpenLayers.i18n("mf.editing.confirmMessageTitle"),OpenLayers.i18n("mf.editing.confirmMessage"),function(b){"yes"==b?this.switchLayer(a):this.combo.setValue(this.currentLayerId)},
this):this.switchLayer(a)},switchLayer:function(a){if(a!=this.COMBO_NONE_VALUE){var b=this.layerConfig[a];this.configureLayer(b);this.createStore(b);this.createModifyFeatureControl();this.createDrawFeatureControl(b);this.createLayerStoreMediator();this.importBtn.enable();this.createForm(b);this.createGrid(b)}else this.destroyAllResources();this.currentLayerId=a},configureLayer:function(a){var b=this.layer;b||(b=this.layer=this.createLayer());a.protocol.autoDestroy=!1;b.protocol=a.protocol;0>OpenLayers.Util.indexOf(this.map.layers,
b)&&this.map.addLayer(b);b.destroyFeatures()},createLayer:function(){var a=new OpenLayers.Layer.Vector(OpenLayers.Util.createUniqueID("mf.ediding"),{strategies:[this.createStrategy()],styleMap:this.createStyleMap(),displayInLayerSwitcher:!1});a.events.register("featureselected",this,this.onFeatureselected);a.events.register("featureunselected",this,this.onFeatureunselected);a.events.register("featureremoved",this,this.onFeatureremoved);a.events.register("featuremodified",this,this.onFeaturemodified);
return a},destroyLayer:function(){var a=this.layer;a&&(a.destroy(),this.layer=null)},createStyleMap:function(){var a=new OpenLayers.StyleMap,b=function(a){return{state:a.state||OpenLayers.State.UNKNOWN}},c={};c[OpenLayers.State.UNKNOWN]={};c[OpenLayers.State.UPDATE]={fillColor:"green",strokeColor:"green"};c[OpenLayers.State.DELETE]={fillColor:"red",strokeColor:"red",fillOpacity:0.2,strokeOpacity:0.3,display:""};c[OpenLayers.State.INSERT]={fillColor:"green",strokeColor:"green"};a.addUniqueValueRules("default",
"state",c,b);a.addUniqueValueRules("delete","state",c,b);return a},createStrategy:function(){return new OpenLayers.Strategy.BBOX({autoActivate:!1})},onFeatureselected:function(a){a=a.feature;this.deleteBtn.enable();this.selectInGrid(a);this.editAttributes(a)},onFeatureunselected:function(){this.deleteBtn.disable();this.unselectInGrid();this.form.getForm().reset();this.form.setDisabled(!0)},createStore:function(a){this.destroyStore();for(var b=[],a=a.featuretypes.properties,c=0;c<a.length;c++)b.push(a[c].getRecordType());
b=new Ext.data.GroupingStore({reader:new mapfish.widgets.data.FeatureReader({},b),groupField:"state"});b.on("add",this.updateCommitBtnState,this);b.on("remove",this.updateCommitBtnState,this);b.on("clear",this.updateCommitBtnState,this);b.on("load",this.updateGridSelection,this);this.store=b},destroyStore:function(){var a=this.store;a&&(a.destroy(),this.store=null)},updateCommitBtnState:function(a){this.commitBtn.setDisabled(!(0<a.getCount()))},updateGridSelection:function(a,b){for(var c=0;c<b.length;c++){var d=
b[c].data.feature;0<=OpenLayers.Util.indexOf(this.layer.selectedFeatures,d)&&this.selectInGrid(d)}},createModifyFeatureControl:function(){this.destroyModifyFeatureControl();var a=new OpenLayers.Control.ModifyFeature(this.layer,{mode:OpenLayers.Control.ModifyFeature.RESHAPE|OpenLayers.Control.ModifyFeature.DRAG,title:OpenLayers.i18n("mf.editing.selectModifyFeature")});this.getTopToolbar().addControl(a,{iconCls:"modifyfeature",toggleGroup:this.getId()+"map"});a.activate();this.modifyFeatureControl=
a},destroyModifyFeatureControl:function(){var a=this.modifyFeatureControl;a&&(this.getTopToolbar().removeControl(a),a.destroy(),this.modifyFeatureControl=null)},onFeatureremoved:function(a){this.modifyFeatureControl&&a.feature==this.modifyFeatureControl.feature&&(this.modifyFeatureControl.feature=null)},onFeaturemodified:function(a){a=a.feature;a.state!=OpenLayers.State.INSERT&&(a.state=OpenLayers.State.UPDATE)},createDrawFeatureControl:function(a){this.destroyDrawFeatureControl();var b,c,d=!1,e;
switch(a.featuretypes.geometry.type){case OpenLayers.Geometry.MultiPoint:d=!0;case OpenLayers.Geometry.Point:b=OpenLayers.i18n("mf.editing.drawPointTitle");c=OpenLayers.Handler.Point;e="drawpoint";break;case OpenLayers.Geometry.MultiPolygon:d=!0;case OpenLayers.Geometry.Polygon:b=OpenLayers.i18n("mf.editing.drawPolygonTitle");c=OpenLayers.Handler.Polygon;e="drawpolygon";break;case OpenLayers.Geometry.MultiLineString:d=!0;case OpenLayers.Geometry.LineString:b=OpenLayers.i18n("mf.editing.drawLineTitle"),
c=OpenLayers.Handler.Path,e="drawline"}a=new OpenLayers.Control.DrawFeature(this.layer,c,{title:b,featureAdded:OpenLayers.Function.bind(this.onFeatureadded,this),handlerOptions:{multi:d}});this.getTopToolbar().addControl(a,{iconCls:e,toggleGroup:this.getId()+"map"});this.drawFeatureControl=a},destroyDrawFeatureControl:function(){var a=this.drawFeatureControl;a&&(this.getTopToolbar().removeControl(a),a.destroy(),this.drawFeatureControl=null)},onFeatureadded:function(a){a.state=OpenLayers.State.INSERT;
this.layer.events.triggerEvent("featuresadded",{features:[a]});this.modifyFeatureControl.selectControl.select(a);this.form.getForm().loadRecord(this.attributesFormDefaults);this.modifyFeatureControl.activate()},createLayerStoreMediator:function(){this.destroyLayerStoreMediator();var a=new mapfish.widgets.data.LayerStoreMediator({store:this.store,layer:this.layer,filter:function(a){return null!=a.state&&a.state!=OpenLayers.State.UNKNOWN}});a.activate();this.layerStoreMediator=a},destroyLayerStoreMediator:function(){var a=
this.layerStoreMediator;a&&(a.deactivate(),this.layerStoreMediator=null)},destroyAllResources:function(){this.destroyResources();this.destroyForm();this.destroyGrid()},destroyResources:function(){this.destroyStore();this.destroyModifyFeatureControl();this.destroyDrawFeatureControl();this.destroyLayerStoreMediator();this.destroyLayer()},setUp:function(){this.layer&&this.currentLayerId!=this.COMBO_NONE_VALUE&&this.map.addLayer(this.layer);this.modifyFeatureControl&&this.modifyFeatureControl.activate()},
tearDown:function(){this.modifyFeatureControl&&this.modifyFeatureControl.deactivate();this.drawFeatureControl&&this.drawFeatureControl.deactivate();var a=this.layer;a&&0<=OpenLayers.Util.indexOf(this.map.layers,a)&&this.map.removeLayer(a)},createForm:function(a){if(a.featuretypes){var b=this.form;b||(b=new Ext.FormPanel({title:OpenLayers.i18n("mf.editing.formTitle"),disabled:!0,items:[{}],trackResetOnLoad:!0,bodyStyle:"padding: 5px",buttons:[{text:"ok",handler:function(){this.currentlyEditedFeature&&
this.form.getForm().isDirty()&&this.updateFeatureAttributes(this.currentlyEditedFeature)},scope:this}]}),this.add(b),this.form=b,this.doLayout());for(var c=this.form.items.items,d=c.length-1;0<=d;--d){var e=c[d];b.getForm().remove(e);b.remove(e)}a=a.featuretypes.properties;c={};for(d=0;d<a.length;d++)e=a[d],b.add(e.getExtField()),c[e.name]=e.defaultValue;b.doLayout();this.attributesFormDefaults=new Ext.data.Record(c);b.getForm().loadRecord(this.attributesFormDefaults)}else OpenLayers.Console.error("no featuretypes exist for the given layer")},
destroyForm:function(){var a=this.form;a&&(a.destroy(),this.form=null)},updateFeatureAttributes:function(a){var b,c,d,e=this.form.items.items;for(d=0;d<e.length;d++)b=e[d],b.getValue&&(b.isDirty&&b.isDirty())&&(c=b.getValue(),a.attributes[b.name]=c,a.data[b.name]=c);a.state!=OpenLayers.State.INSERT&&(a.state=OpenLayers.State.UPDATE);this.layerStoreMediator.featureStoreMediator.addFeatures([a])},createGrid:function(a){var b=this.grid;b&&this.destroyGrid();if(a.featuretypes)if(a.featuretypes.properties){var c=
[{header:OpenLayers.i18n("mf.editing.gridIdHeader"),dataIndex:"fid"}];Ext.each(a.featuretypes.properties,function(a){a.showInGrid&&c.push({header:a.label||a.name,dataIndex:a.name})});c.push({header:OpenLayers.i18n("mf.editing.gridStateHeader"),dataIndex:"state"});b=new Ext.grid.GridPanel({title:OpenLayers.i18n("mf.editing.gridTitle"),height:200,store:this.store,view:new Ext.grid.GroupingView({groupTextTpl:'{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Features" : "Feature"]})'}),columns:c});
b.on("rowcontextmenu",this.onContextClick,this);this.add(b);this.doLayout();this.grid=b}else OpenLayers.Console.error("no featuretypes properties are given for layer");else OpenLayers.Console.error("no featuretypes exist for the given layer")},destroyGrid:function(){this.grid&&(this.grid.destroy(),this.grid=null)},selectInGrid:function(a){if(this.store&&this.grid){var b=this.store.findBy(function(b){return b.get("feature")==a}),c=this.store.getAt(b);this.grid.getSelectionModel().selectRecords([c]);
-1!=b&&this.grid.getView().focusRow(b)}},unselectInGrid:function(){this.grid&&this.grid.getSelectionModel().clearSelections()},editAttributes:function(a){this.currentlyEditedFeature=a;this.form.getForm().reset();a=this.store.reader.readRecords([a]).records[0];this.form.getForm().loadRecord(a);this.form.enable()},onContextClick:function(a,b,c){var d=this.menu;d||(d=new Ext.menu.Menu({id:"grid-ctx",items:[{text:OpenLayers.i18n("mf.editing.onContextClickMessage"),scope:this,handler:function(){this.modifyFeatureControl.selectControl.unselectAll();
this.modifyFeatureControl.selectControl.select(this.ctxRecord.data.feature);this.modifyFeatureControl.activate()}}]}),d.on("hide",this.onContextHide,this),this.menu=d);c.stopEvent();this.ctxRow&&(Ext.fly(this.ctxRow).removeClass("x-node-ctx"),this.ctxRow=null);this.ctxRow=a.view.getRow(b);this.ctxRecord=a.store.getAt(b);Ext.fly(this.ctxRow).addClass("x-node-ctx");d.showAt(c.getXY())},onContextHide:function(){this.ctxRow&&(Ext.fly(this.ctxRow).removeClass("x-node-ctx"),this.ctxRow=null)},isDirty:function(){return this.store&&
0<this.store.getCount()},setWindowOnbeforeunload:function(){window.onbeforeunload=OpenLayers.Function.bind(function(){if(this.isDirty())return OpenLayers.i18n("mf.editing.onBeforeUnloadMessage")},this)}});Ext.reg("featureediting",mapfish.widgets.editing.FeatureEditingPanel);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");
mapfish.widgets.print.Base={map:null,overrides:null,configUrl:null,config:null,layerTree:null,grids:null,serviceParams:null,mask:null,printing:!1,initPrint:function(){null==this.overrides&&(this.overrides={});if(null==this.config)return mapfish.PrintProtocol.getConfiguration(this.configUrl,this.configReceived,this.configFailed,this,this.serviceParams),!0;this.fillComponent();return!1},configReceived:function(a){this.config=a;this.mask&&this.mask.hide()},configFailed:function(){this.mask&&this.mask.hide()},
print:function(){this.mask&&(this.mask.msg=OpenLayers.Lang.translate("mf.print.generatingPDF"),this.mask.show());var a=new mapfish.PrintProtocol(this.map,this.config,this.overrides,this.getCurDpi(),this.serviceParams);this.layerTree&&this.addLegends(a.spec);this.grids&&this.addGrids(a.spec);this.fillSpec(a);this.printing=!0;a.createPDF(function(){this.mask&&this.mask.hide();this.printing=false},function(a){var c="Ext.getCmp('printPopup').destroy();",c=Ext.isOpera?c+("window.open('"+a.getURL+"', '_blank');"):
c+("window.location='"+a.getURL+"';"),a=OpenLayers.Lang.translate("mf.print.pdfReady")+'<br /><br /><table onclick="'+c+'" border="0" cellpadding="0" cellspacing="0" class="x-btn-wrap" align="center"><tbody><tr><td class="x-btn-left"><i>&#160;</i></td><td class="x-btn-center"><em unselectable="on" class="x-btn x-btn-text">'+Ext.MessageBox.buttonText.ok+'</em></td><td class="x-btn-right"><i>&#160;</i></td></tr></tbody></table>';(new Ext.Window({bodyStyle:"padding: 7px;",width:200,id:"printPopup",autoHeight:true,
constrain:true,closable:false,title:OpenLayers.Lang.translate("mf.information"),html:a,listeners:{destroy:function(){this.mask&&this.mask.hide();this.printing=false},scope:this}})).show()},function(){Ext.Msg.alert(OpenLayers.Lang.translate("mf.error"),OpenLayers.Lang.translate("mf.print.unableToPrint"));this.mask&&this.mask.hide();this.printing=false},this)},addGrids:function(a){var b=this.grids;b&&"function"==typeof b&&(b=b());if(b)for(var c in b){var d=b[c];if(d){a[c]={};for(var e=a[c].data=[],
f=a[c].columns=[],h=d.getColumnModel(),d=d.getStore(),g=0;g<h.getColumnCount();++g)h.isHidden(g)||f.push(h.getDataIndex(g));d.each(function(a){var b={},c;for(c in a.data){var d=a.data[c];null!=d&&(d.CLASS_NAME&&"OpenLayers.Feature.Vector"==d.CLASS_NAME&&(d=(new OpenLayers.Format.WKT).write(d)),b[c]=d)}e.push(b)},this)}}},addLegends:function(a){function b(a){var b={name:a.attributes.printText||a.attributes.text,icon:mapfish.Util.relativeToAbsoluteURL(a.attributes.icon)},c=b.classes=[];a.eachChild(function(a){c.push({name:a.attributes.printText||
a.attributes.text,icon:mapfish.Util.relativeToAbsoluteURL(a.attributes.icon)})},this);d.push(b)}function c(a){a.eachChild(function(a){var d=a.attributes;d.checked&&d.layerNames&&!d.hidden&&""!==d.printText?b(a):c(a)},this)}var d=a.legends=[];c(this.layerTree.getRootNode());0==d.length&&delete a.legends},fillSpec:null,getCurDpi:null};Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");mapfish.widgets.print.BaseWidget=function(a){mapfish.widgets.print.BaseWidget.superclass.constructor.call(this,a)};
Ext.extend(mapfish.widgets.print.BaseWidget,Ext.Panel,{pageDrag:null,rotateHandle:null,layer:null,styleMap:null,layout:"fit",initComponent:function(){mapfish.widgets.print.BaseWidget.superclass.initComponent.call(this);this.addEvents("configloaded");this.on("expand",this.setUp,this);this.on("collapse",this.tearDown,this);this.on("activate",this.setUp,this);this.on("deactivate",this.tearDown,this);this.on("enable",this.setUp,this);this.on("disable",this.tearDown,this);this.on("destroy",this.tearDown,
this);this.on("render",function(){var a=this.mask=new Ext.LoadMask(this.body,{msg:OpenLayers.Lang.translate("mf.print.loadingConfig")});null==this.config&&a.show()},this);this.initPrint()||this.fillComponent()},configReceived:function(a){mapfish.widgets.print.Base.configReceived.call(this,a);this.fillComponent();this.doLayout();this.setUp();this.fireEvent("configloaded")},configFailed:function(){mapfish.widgets.print.Base.configFailed.call(this);this.add({border:!1,region:"center",html:OpenLayers.Lang.translate("mf.print.serverDown")});
this.doLayout();this.config=!1},isReallyVisible:function(){if(!this.isVisible()||!this.body.isVisible(!0))return!1;var a=!0;this.bubble(function(b){return a=a&&b.isVisible()&&(!b.body||b.body.isVisible())},this);return a},setUp:function(){!this.disabled&&(this.isReallyVisible()&&this.config&&!this.layer)&&(this.map.addLayer(this.getOrCreateLayer()),this.pageDrag.activate())},tearDown:function(){this.config&&(this.pageDrag&&this.layer)&&(this.pageDrag.destroy(),this.pageDrag=null,this.removeRotateHandle(),
this.layer.removeFeatures(this.layer.features),this.layer.destroy(),this.layer=null)},getOrCreateLayer:function(){if(!this.layer){var a=this;this.layer=new OpenLayers.Layer.Vector("_Print"+this.getId(),{displayInLayerSwitcher:!1,styleMap:this.styleMap,calculateInRange:function(){return!0}});this.pageDrag=new OpenLayers.Control.DragFeature(this.layer);this.map.addControl(this.pageDrag);var b=null;this.pageDrag.onStart=function(c){OpenLayers.Control.DragFeature.prototype.onStart.apply(this,arguments);
b=c;c.attributes.rotate?a.pageRotateStart(c):a.pageDragStart(c)};this.pageDrag.onDrag=function(c){OpenLayers.Control.DragFeature.prototype.onDrag.apply(this,arguments);c||(c=b);c.attributes.rotate&&a.pageRotated(c)};this.pageDrag.onComplete=function(c){OpenLayers.Control.DragFeature.prototype.onComplete.apply(this,arguments);c||(c=b);c.attributes.rotate?a.pageRotateComplete(c):a.pageDragComplete(c);b=null};this.afterLayerCreated()}return this.layer},pageRotateStart:function(){},pageRotated:function(a){var b=
a.attributes.center,c=a.geometry,c=180*Math.atan2(c.x-b.x,c.y-b.y)/Math.PI,d=a.attributes.page;d.attributes.rotation=c;b=new OpenLayers.Geometry.Point(b.x,b.y);d.geometry.rotate(a.attributes.prevAngle-c,b);this.layer.drawFeature(d);this.setCurRotation(Math.round(c));a.attributes.prevAngle=c},pageRotateComplete:function(a){this.createRotateHandle(a.attributes.page)},pageDragStart:function(){this.removeRotateHandle()},removeRotateHandle:function(){this.rotateHandle&&(this.rotateHandle.destroy(),this.rotateHandle=
null)},pageDragComplete:function(a){this.getCurLayout().rotation&&this.createRotateHandle(a)},createRotateHandle:function(a){this.removeRotateHandle();var b=a.geometry.components[0].components[2],c=a.geometry.components[0].components[3],b=new OpenLayers.Geometry.Point((b.x+c.x)/2,(b.y+c.y)/2),c=this.getCenterRectangle(a);this.rotateHandle=new OpenLayers.Feature.Vector(b,{rotate:!0,page:a,center:{x:c[0],y:c[1]},prevAngle:a.attributes.rotation});this.layer.addFeatures(this.rotateHandle)},createRectangle:function(a,
b,c,d){b=this.getExtent(a,b,c).toGeometry();0!=d&&(a=new OpenLayers.Geometry.Point(a.lon,a.lat),b.rotate(-d,a));d=new OpenLayers.Feature.Vector(b,{rotation:d});this.layer.addFeatures(d);return d},getCenterRectangle:function(a){a=a.geometry.getBounds().getCenterLonLat();return[a.lon,a.lat]},getExtent:function(a,b,c){var d=OpenLayers.INCHES_PER_UNIT[this.map.baseLayer.units],e=c.map,c=e.width/72/d*b/2,b=e.height/72/d*b/2;return new OpenLayers.Bounds(a.lon-c,a.lat-b,a.lon+c,a.lat+b)},fitScale:function(a){var b=
this.config.scales;if(0!=b.length){for(var c=[],d=0;d<b.length;++d)c.push(parseFloat(b[d].value));c.sort(function(a,b){return a-b});b=this.map.getExtent();d=OpenLayers.INCHES_PER_UNIT[this.map.baseLayer.units];a=a.map;a=Math.min(72*(b.getWidth()/a.width)*d,72*(b.getHeight()/a.height)*d);b=c[0];for(d=1;d<c.length;++d)if(c[d]<=a)b=c[d];else break;return b}},print:function(){this.overrides[this.layer.name]={visibility:!1};mapfish.widgets.print.Base.print.call(this);delete this.overrides[this.layer.name]},
getLayoutForName:function(a){for(var b=this.config.layouts,c=0;c<b.length;++c){var d=b[c];if(d.name==a)return d}},createScaleCombo:function(){var a=new Ext.data.JsonStore({root:"scales",fields:["name","value"],data:this.config});return new Ext.form.ComboBox({fieldLabel:OpenLayers.Lang.translate("mf.print.scale"),store:a,displayField:"name",valueField:"value",typeAhead:!1,mode:"local",id:"scale_"+this.getId(),hiddenId:"scaleId_"+this.getId(),hiddenName:"scale",name:"scale",editable:!1,triggerAction:"all",
value:this.config.scales[this.config.scales.length-1].value})},createDpiCombo:function(a){if(1<this.config.dpis.length){var b=new Ext.data.JsonStore({root:"dpis",fields:["name","value"],data:this.config});return{fieldLabel:OpenLayers.Lang.translate("mf.print.dpi"),xtype:"combo",store:b,displayField:"name",valueField:"value",typeAhead:!1,mode:"local",id:"dpi_"+this.getId(),hiddenId:"dpiId_"+this.getId(),hiddenName:a,name:a,editable:!1,triggerAction:"all",value:this.config.dpis[0].value}}return{xtype:"hidden",
name:a,value:this.config.dpis[0].value}},createLayoutCombo:function(a){if(1<this.config.layouts.length){var b=new Ext.data.JsonStore({root:"layouts",fields:["name"],data:this.config});return new Ext.form.ComboBox({fieldLabel:OpenLayers.Lang.translate("mf.print.layout"),store:b,displayField:"name",valueField:"name",typeAhead:!1,mode:"local",id:"layout_"+this.getId(),hiddenId:"layoutId_"+this.getId(),hiddenName:a,name:a,editable:!1,triggerAction:"all",value:this.config.layouts[0].name})}return new Ext.form.Hidden({name:a,
value:this.config.layouts[0].name})},createRotationTextField:function(){for(var a=this.config.layouts,b=!1,c=0;c<a.length&&!b;++c)b=a[c].rotation;if(b){var d=/^-?[0-9]+$/;return new Ext.form.TextField({fieldLabel:OpenLayers.Lang.translate("mf.print.rotation"),name:"rotation",value:"0",maskRe:/^[-0-9]$/,msgTarget:"side",validator:function(a){return d.test(a)?!0:"Not a number"}})}return null},fillComponent:null,afterLayerCreated:null,fillSpec:null,getCurLayout:null,setCurRotation:null});
OpenLayers.Util.applyDefaults(mapfish.widgets.print.BaseWidget.prototype,mapfish.widgets.print.Base);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");
mapfish.widgets.print.SimpleForm=Ext.extend(mapfish.widgets.print.BaseWidget,{formConfig:null,wantResetButton:!0,scale:null,rectangle:null,rotation:null,infoPanel:null,fillComponent:function(){var a=OpenLayers.Util.extend({border:!1,bodyBorder:!1},this.formConfig),a=this.formPanel=new Ext.form.FormPanel(a),b=this.createLayoutCombo("/layout");if(1<this.config.layouts.length)b.on("select",this.updateRectangle,this);a.add(b);a.add(this.createDpiCombo("/dpi"));this.scale=a.add(this.createScaleCombo());
this.scale.on("select",this.updateRectangle,this);this.rotation=this.createRotationTextField();null!=this.rotation&&(this.rotation.setDisabled(!this.config.layouts[0].rotation),a.add(this.rotation),this.rotation.on("change",function(){this.rotation.isValid(!0)||this.rotation.setValue(0);this.updateRectangle()},this));null!=this.infoPanel&&a.add(this.infoPanel);this.wantResetButton&&a.addButton({text:OpenLayers.Lang.translate("mf.print.resetPos"),scope:this,handler:function(){this.setCurScale(this.fitScale(this.getCurLayout()));
this.rotation&&this.setCurRotation(0);this.createTheRectangle()}});a.addButton({text:OpenLayers.Lang.translate("mf.print.print"),scope:this,handler:this.print});this.add(a)},updateRectangle:function(){this.layer.removeFeatures(this.rectangle);var a=this.rectangle.geometry.getBounds().getCenterLonLat(),b=this.getCurLayout();this.rectangle=this.createRectangle(a,this.getCurScale(),b,this.rotation&&b.rotation?this.rotation.getValue():0);this.rotation&&(this.rotation.setDisabled(!b.rotation),b.rotation||
this.rotation.setValue(0));b.rotation?this.createRotateHandle(this.rectangle):this.removeRotateHandle()},createTheRectangle:function(){this.rectangle&&this.layer.removeFeatures(this.rectangle);var a=this.getCurLayout();this.rectangle=this.createRectangle(this.map.getCenter(),this.getCurScale(),this.getCurLayout(),this.rotation&&a.rotation?this.rotation.getValue():0);a.rotation&&this.createRotateHandle(this.rectangle)},afterLayerCreated:function(){this.setCurScale(this.fitScale(this.getCurLayout()));
this.createTheRectangle()},getCurLayout:function(){var a=this.formPanel.getForm().getValues()["/layout"];return this.getLayoutForName(a)},getCurScale:function(){return this.formPanel.getForm().getValues().scale},setCurScale:function(a){this.scale.setValue(a)},getCurDpi:function(){return this.formPanel.getForm().getValues().dpi},setCurRotation:function(a){this.rotation.setValue(a)},fillSpec:function(a){var b={center:this.getCenterRectangle(this.rectangle)},c=a.spec;c.pages.push(b);this.formPanel.getForm().items.each(function(a){var e=
a.getName();OpenLayers.String.startsWith(e,"/")?c[e.substr(1)]=a.getValue():b[e]=a.getValue()},this)}});Ext.reg("print-simple",mapfish.widgets.print.SimpleForm);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");
mapfish.widgets.print.MultiPage=Ext.extend(mapfish.widgets.print.BaseWidget,{formConfig:null,columns:null,zoomToExtentEnabled:!0,grid:null,printButton:null,freezeGeometryRefresh:!1,fillComponent:function(){this.columns=this.columns||[];var a=this.add({border:!1,layout:"border",id:this.getId()+"InnerPanel"});this.createGlobalForm(a);this.createGrid(a)},setUp:function(){if(this.config){if(Ext.isGecko3){var a=this.formPanel.getEl().parent();a.setStyle("position","absolute");setTimeout(function(){a.setStyle("position",
"relative")},20)}mapfish.widgets.print.BaseWidget.prototype.setUp.call(this)}},createGlobalForm:function(a){var b=OpenLayers.Util.extend({region:"south",bodyStyle:"padding: 7px 0 0 0;",border:!1,bodyBorder:!1,id:this.getId()+"formPanel"},this.formConfig),b=this.formPanel=new Ext.form.FormPanel(b),c=this.createLayoutCombo("layout");if(1<this.config.layouts.length)c.on("select",this.layoutChanged,this);b.add(c);b.add(this.createDpiCombo("dpi"));this.printButton=b.addButton({text:OpenLayers.Lang.translate("mf.print.print"),
scope:this,handler:this.print,disabled:!0});a.add(b)},createGrid:function(a){var b=this.createScaleCombo();b.on("select",this.updateCurrentRectangle,this);var c=this,b=[{header:OpenLayers.Lang.translate("mf.print.scale"),dataIndex:"scale",editor:b,renderer:function(a){return c.getScaleName(a)}}],d=this.createRotationTextField();null!=d&&b.push({header:OpenLayers.Lang.translate("mf.print.rotation"),dataIndex:"rotation",editor:d,id:this.getId()+"_rotation",hidden:!this.config.layouts[0].rotation});
this.columns&&b.push.apply(b,this.columns);for(var d=[],e=0;e<b.length;++e)d.push({name:b[e].dataIndex});d=new Ext.data.SimpleStore({fields:d});b=this.grid=new Ext.grid.EditorGridPanel({region:"center",border:!1,id:this.getId()+"PagesGrid",autoScroll:!0,enableColumnHide:!1,enableHdMenu:!1,store:d,viewConfig:{forceFit:!0,emptyText:OpenLayers.Lang.translate("mf.print.noPage")},sm:new Ext.grid.RowSelectionModel({singleSelect:!0}),clicksToEdit:1,columns:b,bbar:[{text:OpenLayers.Lang.translate("mf.print.addPage"),
scope:this,handler:this.addPage},{text:OpenLayers.Lang.translate("mf.print.remove"),scope:this,handler:this.removeSelected,id:this.getId()+"_remove",disabled:!0},{text:OpenLayers.Lang.translate("mf.print.clearAll"),scope:this,handler:this.clearPages}]});a.add(b);b.getSelectionModel().addListener("selectionchange",this.selectionChanged,this);b.getStore().addListener("update",function(a,b){this.freezeGeometryRefresh||(this.updateRectangle(b),this.updatePrintLayerStyle())},this);b.getStore().addListener("remove",
function(a,b){this.layer.removeFeatures(b.data.rectangle);this.removeRotateHandle();0==a.getCount()&&this.printButton.disable()},this);b.getStore().addListener("clear",function(){this.layer.removeFeatures(this.layer.features);this.printButton.disable()},this)},selectionChanged:function(){this.updatePrintLayerStyle();var a=Ext.getCmp(this.getId()+"_remove"),b=this.grid.getSelectionModel().getSelected();if(b){if(this.zoomToExtentEnabled){var c=b.data.rectangle.geometry.getBounds().clone();c.extend(this.map.getExtent());
this.map.zoomToExtent(c)}a.enable();this.getCurLayout().rotation&&this.createRotateHandle(b.data.rectangle)}else a.disable()},updatePrintLayerStyle:function(){for(var a=this.grid.getSelectionModel().getSelected(),b=null,c=0;c<this.layer.features.length;++c){var d=this.layer.features[c],e=d.data.record==a;d.style=OpenLayers.Feature.Vector.style[e?"select":"default"];e&&c!=this.layer.features.length-1&&(b=d,this.layer.removeFeatures(d))}b&&this.layer.addFeatures(b);this.layer.redraw()},addPage:function(){for(var a=
this.getCurLayout(),b=this.fitScale(a),a=this.createRectangle(this.map.getCenter(),b,a,0),b={scale:b,rotation:0,rectangle:a},c=0;c<this.columns.length;++c){var d=this.columns[c].dataIndex;null==b[d]&&(b[d]="")}c=this.grid.getStore();b=new c.recordType(b);c.add(b);a.data.record=b;this.grid.getSelectionModel().selectLastRow();this.printButton.enable()},clearPages:function(){this.grid.stopEditing();this.grid.getStore().removeAll()},removeSelected:function(){this.grid.stopEditing();var a=this.grid.getSelectionModel().getSelected();
this.grid.getStore().remove(a)},layoutChanged:function(){this.grid.getStore().each(function(a){this.updateRectangle(a)},this);this.updatePrintLayerStyle();var a=this.grid.getColumnModel(),b=a.getIndexById(this.id+"_rotation");if(0<=b){var c=this.getCurLayout();a.setHidden(b,!c.rotation)}},updateCurrentRectangle:function(){this.updateRectangle(this.grid.getSelectionModel().getSelected());this.updatePrintLayerStyle()},updateRectangle:function(a){this.grid.stopEditing();this.layer.removeFeatures(a.data.rectangle);
var b=this.getCurLayout(),c=a.get("scale"),d=b.rotation?a.get("rotation"):0,e=a.data.rectangle.geometry.getBounds().getCenterLonLat(),c=this.createRectangle(e,c,b,d);c.data.record=a;a.data.rectangle=c;this.grid.getSelectionModel().getSelected()==a&&(b.rotation?this.createRotateHandle(c):this.removeRotateHandle())},afterLayerCreated:function(){if(0!=this.grid.getStore().getCount()){this.grid.getStore().each(function(a){this.layer.addFeatures(a.data.rectangle)},this);this.updatePrintLayerStyle();var a=
this.grid.getSelectionModel().getSelected();a&&this.getCurLayout().rotation&&this.createRotateHandle(a.data.rectangle)}else this.addPage()},pageRotateStart:function(a){mapfish.widgets.print.BaseWidget.prototype.pageRotateStart.call(this,a);this.grid.stopEditing()},pageDragStart:function(a){mapfish.widgets.print.BaseWidget.prototype.pageDragStart.call(this,a);var b=this.zoomToExtentEnabled,c=this.grid.getSelectionModel();c.getSelected()!=a.data.record&&(this.zoomToExtentEnabled=!1,c.selectRecords([a.data.record]),
this.zoomToExtentEnabled=b);this.grid.stopEditing()},getCurDpi:function(){return this.formPanel.getForm().getValues().dpi},getCurLayoutName:function(){return this.formPanel.getForm().getValues().layout},getCurLayout:function(){var a=this.getCurLayoutName();return this.getLayoutForName(a)},setCurRotation:function(a){var b=this.grid.getSelectionModel().getSelected();this.freezeGeometryRefresh=!0;b.set("rotation",a);this.freezeGeometryRefresh=!1},fillSpec:function(a){var b=a.spec,c=this.getCurLayout();
this.formPanel.getForm().items.each(function(a){b[a.getName()]=a.getValue()},this);this.grid.getStore().each(function(a){var e={},f;for(f in a.data)if("rectangle"==f)e.center=this.getCenterRectangle(a.data.rectangle);else if("rotation"!=f||c.rotation)e[f]=a.data[f];b.pages.push(e)},this)},getScaleName:function(a){for(var b=this.config.scales,c=0;c<b.length;++c){var d=b[c];if(d.value==a)return d.name}}});Ext.reg("print-multi",mapfish.widgets.print.MultiPage);Ext.namespace("mapfish.widgets");Ext.namespace("mapfish.widgets.print");
mapfish.widgets.print.PrintAction=function(a){var b=OpenLayers.Util.extend({iconCls:"mf-print-action",text:OpenLayers.Lang.translate("mf.print.print"),tooltip:OpenLayers.Lang.translate("mf.print.print-tooltip"),handler:this.handler,scope:this},a);mapfish.widgets.print.PrintAction.superclass.constructor.call(this,b);OpenLayers.Util.extend(this,a);this.mask=new Ext.LoadMask(this.map.div,{msg:OpenLayers.Lang.translate("mf.print.loadingConfig")});this.initPrint()};
Ext.extend(mapfish.widgets.print.PrintAction,Ext.Action,{handler:function(){!this.printing&&this.config&&this.print()},fillSpec:function(a){var b={bbox:this.map.getExtent().toArray()},a=a.spec;a.pages.push(b);a.layout=this.getCurLayout()},getCurDpi:function(){return this.config.dpis[0].value},getCurLayout:function(){return this.config.layouts[0].name}});OpenLayers.Util.applyDefaults(mapfish.widgets.print.PrintAction.prototype,mapfish.widgets.print.Base);Ext.reg("print-action",mapfish.widgets.print.PrintAction);Ext.namespace("mapfish.widgets.search");mapfish.widgets.search.Form=function(a){a=a||{};!1!==a.autobind&&this.bind(a.protocol);delete a.autobind;delete a.protocol;Ext.apply(this,a);this.form instanceof Ext.form.FormPanel&&(this.form=this.form.getForm())};
mapfish.widgets.search.Form.prototype={form:null,getFilter:function(){return GeoExt.form.toFilter(this.form)},bind:function(a){return(new mapfish.Searcher).bind.apply(this,[a])},triggerSearch:function(){var a=new GeoExt.form.SearchAction(this.form);this.form.doAction(a)}};
