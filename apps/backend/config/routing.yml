# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# Partie synthese
getSynthese:
  class: sfRequestRoute
  url: /synthese/get
  param: { module: synthese, action: get }
  requirements: { sf_method: get }
addObservation:
  class: sfRequestRoute
  url: /synthese/observation
  param: { module: synthese, action: add, id_source: 0 }
  requirements: { sf_method: post }
updateObservation:
  class: sfRequestRoute
  url: /synthese/observation/:id_synthese
  param: { module: synthese, action: update, id_synthese: 0}
  requirements: { sf_method: put }
deleteObservation:
  class: sfRequestRoute
  url: /synthese/observation/:id_synthese
  param: { module: synthese, action: delete, id_synthese: 0}
  requirements: { sf_method: delete }
xlsObsSynthese:
  url: /synthese/xlsobs
  param: { module: synthese, action: xlsObs }
xlsStatusSynthese:
  url: /synthese/xlsstatus
  param: { module: synthese, action: xlsStatus }
shpSynthese:
  url: /synthese/shp
  param: { module: synthese, action: shp }
gmlSynthese:
  url: /synthese/gml
  param: { module: synthese, action: kml }
uploadGml:
  url: /synthese/uploadshp
  param: { module: synthese, action: uploadFileShp }

# Partie Flore Patri
xlsAp:
  url: /ap/xls/
  param: { module: ap, action: xls }
deleteAp:
  url: /ap/delete/
  param: { module: ap, action: delete }
SaveAp:
  url: /ap/save/:indexap
  param: { module: ap, action: save }
getOneAp:
  url: /ap/listone/:indexap
  param: { module: ap, action: listone }
getAp:
  url: /ap/get/:indexzp
  param: { module: ap, action: get }
getAllZp:
  url: /zp/all
  param: { module: zp, action: all }
getZp:
  url: /zp/get/:indexzp
  param: { module: zp, action: get }
validateZp:
  url: /zp/validate/:indexzp
  param: { module: zp, action: validate }
deleteZp:
  url: /zp/delete/
  param: { module: zp, action: delete }
saveZp:
  url: /zp/save/:indexzp.:monaction
  param: { module: zp, action: save }
multiformat_zp:
  url: /zp/get/:indexzp.:format
  param: { module: zp, action: get }
UploadGpx:
  url: /ap/uploadgpx
  param: { module: ap, action: uploadFileGpx }

# partie florestation
xlsStation:
  url: /station/xls/
  param: { module: station, action: xls }
deleteStation:
  url: /station/delete/
  param: { module: station, action: delete }
getAllStation:
  url: /station/all
  param: { module: station, action: all }
getStation:
  url: /station/get/:id_station
  param: { module: station, action: get }
validateStation:
  url: /station/validate/:id_station
  param: { module: station, action: validate }
multiformat_station:
  url: /station/get/:id_station.:format
  param: { module: station, action: get }
getTaxonsFs:
  url: /station/gettaxons/:id_station
  param: { module: station, action: getTaxons }
getOneReleveTaxons:
  url: /station/getonerelevetaxons
  param: { module: station, action: getOneReleveTaxons }
deleteTaxon:
  url: /station/deletetaxon
  param: { module: station, action: deleteTaxon }
saveStation:
  url: /station/save
  param: { module: station, action: save }
saveTaxon:
  url: /station/savetaxon
  param: { module: station, action: saveTaxon }
getTaxonReference:
  url: /taxon/getref
  param: { module: station, action: getTaxonsReference }
  
# partie bryo
xlsStationBryo:
  url: /bryo/xls/
  param: { module: bryo, action: xls }
deleteStationBryo:
  url: /bryo/delete/
  param: { module: bryo, action: delete }
getAllStationBryo:
  url: /bryo/all
  param: { module: bryo, action: all }
getStationBryo:
  url: /bryo/get/:id_station
  param: { module: bryo, action: get }
multiformat_stationBryo:
  url: /bryo/get/:id_station.:format
  param: { module: bryo, action: get }
multiformat_stationBryo:
  url: /bryo/get/:id_station.:format
  param: { module: bryo, action: get }
getTaxonsBryo:
  url: /bryo/gettaxons/:id_station
  param: { module: bryo, action: getTaxons }
getOneReleveTaxonsBryo:
  url: /bryo/getonerelevetaxons
  param: { module: bryo, action: getOneReleveTaxons }
deleteTaxonBryo:
  url: /bryo/deletetaxon
  param: { module: bryo, action: deleteTaxon }
saveStationBryo:
  url: /bryo/save
  param: { module: bryo, action: save }
saveTaxonBryo:
  url: /bryo/savetaxon
  param: { module: bryo, action: saveTaxon }

# Partie contact flore
saveFicheCflore:
  url: /cflore/save
  param: { module: cflore, action: saveCflore }
deleteFicheCflore:
  url: /cflore/deletefiche
  param: { module: cflore, action: deleteFicheCflore }
deleteReleveCflore:
  url: /cflore/deletereleve
  param: { module: cflore, action: deleteReleveCflore }
getZCflore:
  url: /cflore/getz
  param: { module: cflore, action: getZ }
getOneFicheCflore:
  url: /cflore/getone/:id_cflore
  param: { module: cflore, action: getOneFiche }
getListRelevesCflore:
  url: /cflore/listreleves/:id_cflore
  param: { module: cflore, action: getListRelevesCflore }

# Partie contact faune
saveFicheCf:
  url: /cf/save
  param: { module: cf, action: saveCf }
saveFicheMortalite:
  url: /cf/savemortalite
  param: { module: cf, action: saveMortalite }
deleteFicheCf:
  url: /cf/deletefiche
  param: { module: cf, action: deleteFicheCf }
deleteReleveCf:
  url: /cf/deletereleve
  param: { module: cf, action: deleteReleveCf }
getZCf:
  url: /cf/getz
  param: { module: cf, action: getZ }
getOneFicheCf:
  url: /cf/getone/:id_cf
  param: { module: cf, action: getOneFiche }
getListRelevesCf:
  url: /cf/listreleves/:id_cf
  param: { module: cf, action: getListRelevesCf }

# Partie faune invertébrés
saveFicheInv:
  url: /invertebre/save
  param: { module: invertebre, action: saveInv }
deleteFicheInv:
  url: /invertebre/deletefiche
  param: { module: invertebre, action: deleteFicheInv }
deleteReleveInv:
  url: /invertebre/deletereleve
  param: { module: invertebre, action: deleteReleveInv }
getZInv:
  url: /invertebre/getz
  param: { module: invertebre, action: getZ }
getOneFicheInv:
  url: /invertebre/getone/:id_inv
  param: { module: invertebre, action: getOneFiche }
getListRelevesInv:
  url: /invertebre/listreleves/:id_inv
  param: { module: invertebre, action: getListRelevesInv }

#Menus déroulants faune 
getCriteresCfClasse:
  url: /bibs/criterescf/:id_classe
  param: { module: bibs, action: ListCritereCf }
getCriteresCf:
  url: /bibs/criterescf
  param: { module: bibs, action: ListCritereCf }
getCriteresInv:
  url: /bibs/criteresinv
  param: { module: bibs, action: ListCritereInv }
getMilieuxInv:
  url: /bibs/milieuxinv
  param: { module: bibs, action: listMilieuxInv }
getTaxons:
  url: /bibs/taxons
  param: { module: bibs, action: listTaxons }
getObservateursCfAdd:
  url: /bibs/observateurscfadd
  param: { module: bibs, action: listObservateursCfAdd }
getObservateursInvAdd:
  url: /bibs/observateursinvadd
  param: { module: bibs, action: listObservateursInvAdd }
getTaxonsCf:
  url: /bibs/taxonscf
  param: { module: bibs, action: listTaxonsCf }
getTaxonsInv:
  url: /bibs/taxonsinv
  param: { module: bibs, action: listTaxonsInv }
getTaxonsInvUnite:
  url: /bibs/taxonsinvu
  param: { module: bibs, action: listTaxonsInvu }
getTaxonsCfUnite:
  url: /bibs/taxonscfu
  param: { module: bibs, action: listTaxonsCfu }

# Menus déroulants flore
listObservateursFlore:
  url: /bibs/observateurs
  param: { module: bibs, action: listObservateursFlore }
filtreObservateursFp:
  url: /bibs/filtreobservateursfp
  param: { module: bibs, action: filtreObservateursFp }
filtreObservateursFs: 
  url: /bibs/filtreobservateursfs
  param: { module: bibs, action: filtreObservateursFs }
filtreObservateursBryo:
  url: /bibs/filtreobservateursbryo
  param: { module: bibs, action: filtreObservateursBryo }
filtreObservateursCflore:
  url: /bibs/filtreobservateurscflore
  param: { module: bibs, action: filtreObservateursCflore }
anneesFp:
  url: /bibs/listanneefp
  param: { module: bibs, action: listAnneeFp }
anneesFs:
  url: /bibs/listanneefs
  param: { module: bibs, action: listAnneeFs }
anneesBryo:
  url: /bibs/listanneebryo
  param: { module: bibs, action: listAnneeBryo }
perturbations:
  url: /bibs/perturbations
  param: { module: bibs, action: listPerturbations }
physionomies:
  url: /bibs/physionomies
  param: { module: bibs, action: listPhysionomies }
taxonl:
  url: /bibs/listlfp
  param: { module: bibs, action: listlfp }
taxonf:
  url: /bibs/listffp
  param: { module: bibs, action: listffp }
filtreTaxonOrigineFs:
  url: /bibs/filtretaxonoriginefs
  param: { module: bibs, action: filtreTaxonOrigineFs }
filtreTaxonOrigineBryo:
  url: /bibs/filtretaxonoriginebryo
  param: { module: bibs, action: filtreTaxonOrigineBryo }
filtreTaxonReferenceFs:
  url: /bibs/filtretaxonreferencefs
  param: { module: bibs, action: filtreTaxonReferenceFs }
filtreTaxonReferenceBryo:
  url: /bibs/filtretaxonreferencebryo
  param: { module: bibs, action: filtreTaxonReferenceBryo }
phenologie:
  url: /bibs/listpheno
  param: { module: bibs, action: listPheno }
frequenceMethodoNew:
  url: /bibs/listfrequencemethodonew
  param: { module: bibs, action: listFrequenceMethodoNew }
comptageMethodo:
  url: /bibs/listcomptagemethodo
  param: { module: bibs, action: listComptageMethodo }  
organismes:
  url: /bibs/organismes
  param: { module: bibs, action: listOrganismes }
communes:
  url: /bibs/communes
  param: { module: bibs, action: listCommunesSaisie }
communes_secteur:
  url: /bibs/communes/:secteur
  param: { module: bibs, action: listCommunesSaisie }
secteurfp:
  url: /bibs/secteursfp
  param: { module: bibs, action: listSecteursFp }
secteurs:
  url: /bibs/secteurs
  param: { module: bibs, action: listSecteurs }
secteursBryo:
  url: /bibs/secteursbryo
  param: { module: bibs, action: listSecteursBryo }
abondances:
  url: /bibs/abondances
  param: { module: bibs, action: listAbondances }
abondancesBryo:
  url: /bibs/abondancesbryo
  param: { module: bibs, action: listAbondancesBryo }
abondancesCflore:
  url: /bibs/abondancescflore
  param: { module: bibs, action: listAbondancesCflore }
phenologiesCflore:
  url: /bibs/phenologiescflore
  param: { module: bibs, action: listPhenologiesCflore }
validitesCflore:
  url: /bibs/validitescflore
  param: { module: bibs, action: listValiditesCflore }
expositions:
  url: /bibs/expositions
  param: { module: bibs, action: listExpositions }
expositionsBryo:
  url: /bibs/expositionsbryo
  param: { module: bibs, action: listExpositionsBryo }
homogenes:
  url: /bibs/homogenes
  param: { module: bibs, action: listHomogenes }
programmeFs:
  url: /bibs/programmefs
  param: { module: bibs, action: listProgrammeFs }
surfaces:
  url: /bibs/surfaces
  param: { module: bibs, action: listSurfaces }
microreliefs:
  url: /bibs/microreliefs
  param: { module: bibs, action: listMicroreliefs }
supports:
  url: /bibs/supports
  param: { module: bibs, action: listSupports }
idSophie:
  url: /bibs/sophie
  param: { module: bibs, action: listSophie }
getTaxonsCflore:
  url: /bibs/taxonscflore
  param: { module: bibs, action: listTaxonsCflore }
getTaxonsCfloreUnite:
  url: /bibs/taxonscfloreu
  param: { module: bibs, action: listTaxonsCfloreu }

#Menus déroulants synthèse
getAnneesSynthese:
  url: /bibs/listanneesynthese
  param: { module: bibs, action: listAnneesSynthese }
getTreeTaxonsSynthese:
  url: /bibs/taxonstree
  param: { module: bibs, action: listTaxonsTreeSynthese}
getTaxonsSyntheseLatin:
  class: sfRequestRoute
  url: /bibs/taxonssyntheselatin/:fff/:patri/:protege
  param: { module: bibs, action: listTaxonsSyntheseLatin, fff: null, patri: false, protege: false }
getTaxonsSyntheseFr:
  class: sfRequestRoute
  url: /bibs/taxonssynthesefr/:fff/:patri/:protege
  param: { module: bibs, action: listTaxonsSyntheseFr, fff: null, patri: false, protege: false }
getSecteursSynthese:
  url: /bibs/secteurssynthese
  param: { module: bibs, action: listSecteurs }

#Menus déroulants utilisés dans plusierus modules
getProtocoles:
  url: /bibs/protocoles
  param: { module: bibs, action: listProtocoles }
getProgrammes:
  url: /bibs/programmes
  param: { module: bibs, action: listProgrammes }
getReserves:
  url: /bibs/reserves
  param: { module: bibs, action: listReserves }
getN2000:
  url: /bibs/n2000
  param: { module: bibs, action: listN2000 }

#statff
datasNbObsKd:
  url: /datasnbobskd
  param: { module: home, action: datasNbObsKd }
datasNbObsGp1:
  url: /datasnbobsgp1
  param: { module: home, action: datasNbObsGp1 }
datasNbObsGp2:
  url: /datasnbobsgp2
  param: { module: home, action: datasNbObsGp2 }
datasNbObsCl:
  url: /datasnbobscl
  param: { module: home, action: datasNbObsCl }
datasNbObsYear:
  url: /datasnbobsyear
  param: { module: home, action: datasNbObsYear }
datasNbObsOrganisme:
  url: /datasnbobsorganisme
  param: { module: home, action: datasNbObsOrganisme }
datasNbObsProgramme:
  url: /datasnbobsprogramme
  param: { module: home, action: datasNbObsProgramme }
datasNbTxProgramme:
  url: /datasnbtxprogramme
  param: { module: home, action: datasNbTxProgramme }
datasNbObsCf:
  url: /datasnbobscf
  param: { module: home, action: datasNbObsCf }
datasNbObsMortalite:
  url: /datasnbobsmortalite
  param: { module: home, action: datasNbObsMortalite }
datasNbObsInv:
  url: /datasnbobsinv
  param: { module: home, action: datasNbObsInv }
datasNbObsCflore:
  url: /datasnbobscflore
  param: { module: home, action: datasNbObsCflore }
datasNbObsFs:
  url: /datasnbobsfs
  param: { module: home, action: datasNbObsFs }
datasNbObsFp:
  url: /datasnbobsfp
  param: { module: home, action: datasNbObsFp }
datasNbObsBryo:
  url: /datasnbobsbryo
  param: { module: home, action: datasNbObsBryo }

#autres
getStatus:
  url: /getstatus
  param: { module: home, action: getStatus }
cf:
  url: /cf
  param: { module: home, action: indexCf }
mortalite:
  url: /mortalite
  param: { module: home, action: indexMortalite }
invertebre:
  url: /invertebre
  param: { module: home, action: indexInvertebre }
# on peut ici rediriger le lien flore prioritaire vers le reseau de conservation Alpes-Ain
#fp: 
#  url: /fp
#  param: { module: home, action: indexReseau }
fp: 
  url: /fp
  param: { module: home, action: indexFp }
reseau: 
  url: /reseau
  param: { module: home, action: indexReseau }
fs: 
  url: /fs
  param: { module: home, action: indexFs }
bryo: 
  url: /bryo
  param: { module: home, action: indexBryo }
cflore:
  url: /cflore
  param: { module: home, action: indexCflore }
synthese:
  url: /synthese
  param: { module: home, action: indexSynthese }
logout: 
  url: /deconnexion
  param: { module: home, action: logout }
login: 
  url: /login
  param: { module: home, action: login }
# default rules
homepage:
  url: /
  param: { module: home, action: index }
# generic rules
# please, remove them by adding more specific rules
default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
