import { moduleCode } from './../../../../contrib/occtax/frontend/app/module.code.config';
// WARNING: this file was auto generated by GeoNature command line.
// See Jinja template with ".sample" file extension in same directory.

import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';

import { HomeContentComponent } from '../components/home-content/home-content.component';
import { PageNotFoundComponent } from '../components/page-not-found/page-not-found.component';
import { AuthGuard, ModuleGuardService } from '@geonature/routing/routes-guards.service';


import { SignUpGuard } from '@geonature/routing/routes-guards.service';
import { SignUpComponent } from '../components/sign-up/sign-up.component';

import { UserManagementGuard } from '@geonature/routing/routes-guards.service';
import { NewPasswordComponent } from '../components/new-password/new-password.component';

import { ConfigService } from '@geonature/utils/configModule/core'

import { LoginComponent } from '../components/login/login.component';
import { NavHomeComponent } from '../components/nav-home/nav-home.component';

import  { externalModules }  from '../../../../external_modules';


const getDynamicRoutes = (configService: ConfigService) => {

  const appConfig = configService.getSettings();
  const navChildrenModules = []
  // ajout des modules avec frontend dans navChildren
  for (const moduleCode of appConfig.modules) {
    const moduleConfig = appConfig[moduleCode]
    navChildrenModules.push({
      path: moduleConfig.MODULE_PATH,
      loadChildren: () => externalModules[moduleCode],
      canActivate: [ModuleGuardService],
      data: {
        module_code: moduleCode
      },
    });
  }

  const navChildren = [
      {
        path: '',
        component: HomeContentComponent,
      },
      {
        path: 'synthese',
        data: { module_code: 'synthese' },
        canActivate: [ModuleGuardService],
        loadChildren: '@geonature/syntheseModule/synthese.module#SyntheseModule'
      },
      {
        path: 'metadata',
        data: { module_code: 'metadata' },
        canActivate: [ModuleGuardService],
        loadChildren: '@geonature/metadataModule/metadata.module#MetadataModule'
      },
      {
        path: 'admin',
        loadChildren: '@geonature/adminModule/admin.module#AdminModule',
        canActivate: [ModuleGuardService],
        data: { module_code: 'admin' }
      },
      ...navChildrenModules,
      {
        path: '**',
        component: PageNotFoundComponent
      }
  ]

  // if (appConfig['ACCOUNT_MANAGEMENET']['ENABLE_USER_MANAGEMENT']) {
  //   navChildren.push({
  //       path: 'user',
  //       data: { module_code: 'user' },
  //       loadChildren: '@geonature/userModule/user.module#UserModule',
  //     })
  // }


  const routes = [
  {
    path: 'login',
    component: LoginComponent,
  },
  {
    path: '',
    component: NavHomeComponent,
    canActivateChild: [AuthGuard],
    children: navChildren
  }
]

// ajout des routes USER MANAGEMENT

// if (appConfig['ACCOUNT_MANAGEMENT']['ENABLE_SIGN_UP']) {
//   routes.push({
//     path: 'inscription',
//     component: SignUpComponent,
//     canActivate: [SignUpGuard],
//   });
// }

// if (appConfig['ACCOUNT_MANAGEMENT']['ENABLE_USER_MANAGEMENT']) {
//   routes.push( {
//     path: 'new-password',
//     component: NewPasswordComponent,
//     canActivate: [UserManagementGuard],
//   });
// }


return routes;
};

const routing = RouterModule.forRoot([], {useHash: true });
export {routing, getDynamicRoutes}
