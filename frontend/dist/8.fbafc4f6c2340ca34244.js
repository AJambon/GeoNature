(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"1yF2":function(e,t){e.exports='<div id="cover-spin" *ngIf="!searchService.dataLoaded"> \n</div>\n\n\n<div class="wrapper">\n    <nav #navBar id="sidebar" class="collapse show">\n        \x3c!-- <pnx-synthese-search (searchClicked)="loadAndStoreData($event)"></pnx-synthese-search> --\x3e\n        <pnx-synthese-search\n            (searchClicked)="loadAndStoreData($event)">\n        </pnx-synthese-search>\n    </nav>\n\n    <div class="row row-sm page-content">\n        <button #buttonToggle\n        [style.left.px]="marginButton"\n        (click)="mooveButton()"\n        data-toggle="collapse" data-target="#sidebar"\n        aria-controls="sidebar"\n        type="button" id="sidebarCollapse" class="btn btn-toogle-sidenav box-shadow">\n            <i [hidden]="searchBarHidden" class="fa fa-caret-left"></i>\n            <i [hidden]="!searchBarHidden" class="fa fa-caret-right"></i>\n        </button>\n          <div class="col-sm-12 col-md-7 padding-sm">\n\n              <pnx-synthese-carte [inputSyntheseData]="_mapListService.geojsonData"></pnx-synthese-carte>\n          </div>\n          <div class="col-sm-12 col-md-5 padding-sm">\n              <pnx-synthese-list [inputSyntheseData]="_mapListService.tableData" [searchBarHidden]="searchBarHidden"></pnx-synthese-list>\n          </div>\n    </div>\n</div>\n\n\n'},"4t9a":function(e,t){e.exports=""},"6wUY":function(e,t){e.exports='<div class="modal-header">\n  <h5 class="modal-title" id="modalLabel"> T\xe9l\xe9chargement </h5>\n  <button type="button" class="close" aria-label="Close" (click)="activeModal.dismiss(\'Cross click\')">\n    <span aria-hidden="true">&times;</span>\n  </button>\n</div>\n<div class="modal-body">\n  <div *ngIf="tooManyObs">\n\n    <div class="alert alert-danger" role="alert">\n      <b> Attention ! </b> Votre requ\xeate comporte un nombre trop important d\'observations pour que celles-ci soient affich\xe9es sur la\n      carte.\n    </div>\n\n    <div class="alert alert-warning" role="alert">\n      Vous pouvez n\xe9amoins exporter les donn\xe9es, dans une limite de <b> {{\'SYNTHESE.NB_MAX_OBS_EXPORT\' | config}} </b>\n      observations en cliquant sur les liens ci-dessous\n    </div>\n\n    <div class="alert alert-warning" role="alert">\n      En fermant cette fen\xeatre vous pouvez visualiser <b> seulement</b> les {{\'SYNTHESE.NB_MAX_OBS_MAP\' | config}} derni\xe8res\n      observations\n      correspondant \xe0 votre requ\xeate. <br>\n    </div>\n\n  </div>\n  <h5 class="underlined second-color"> T\xe9l\xe9charger les observations </h5>\n  <div style="margin-bottom:5px;">\n    <button [disabled]="_dataService.isDownloading" style="margin-left: 5px;"\n      *ngFor="let format of \'SYNTHESE.EXPORT_FORMAT\' | config"\n      class="buttonLoad" (click)="downloadObservations(format)"\n      type="button" class="btn btn-success format-btn">\n      Format {{format}}\n    </button>\n  </div>\n\n  <h5 class="underlined second-color"> T\xe9l\xe9charger les taxons </h5>\n  <div style="margin-bottom:5px;">\n    <button [disabled]="_dataService.isDownloading" class="btn btn-success"\n    (click)="downloadTaxons(\'csv\', \'synthese_taxons\')">\n      Taxons <i class="fa fa-list-alt" aria-hidden="true"></i>\n   </button>\n  </div>\n\n  <h5 class="underlined second-color"> T\xe9l\xe9charger les statuts</h5>\n  <div>\n    <button [disabled]="_dataService.isDownloading" class="btn btn-success"\n    (click)="downloadStatusOrMetadata(\'synthese/export_statuts\', \'synthese_statuts\')">\n       Statuts <i class="fa fa-list-alt" aria-hidden="true"></i>\n\n    </button>\n  </div>\n\n  <h5 class="underlined second-color"> T\xe9l\xe9charger les m\xe9tadonn\xe9es</h5>\n  <div>\n    <button [disabled]="_dataService.isDownloading" class="btn btn-success" (click)="downloadStatusOrMetadata(\'synthese/export_metadata\', \'synthese_metadata\')">\n       M\xe9tadonn\xe9es <i class="fa fa-list-alt" aria-hidden="true"></i>\n\n    </button>\n  </div>\n\n\n  <div *ngIf="_dataService.isDownloading" class="telechargement card" style="margin-top: 30px;">\n    <div class="card-body text-{{bstype}}" >\n      {{\'Downloading\' | translate }}\n      <img  src="assets/images/Spinner.gif" alt="Chargement..." height="40" width="40">\n    </div>\n  </div>\n</div>\n'},Or1R:function(e,t){e.exports=".selected {\n  background-color: red; }\n\n:host /deep/ .datatable-body-row.active .datatable-row-group {\n  background-color: #75e376 !important; }\n\n:host /deep/ .datatable-body-row {\n  height: 30px !important; }\n\n:host /deep/ .datatable-body-cell {\n  font-size: 12px !important;\n  padding-bottom: 15px !important;\n  padding-top: 8px !important;\n  padding-left: 15px !important; }\n\n:host /deep/ .datatable-body-cell i {\n  font-size: 12px; }\n\nngx-datatable {\n  box-shadow: none !important; }\n\n#download-btn {\n  margin-top: 5px; }\n\nbutton[disabled] {\n  cursor: not-allowed; }\n\n.row-sm {\n  height: 20px !important;\n  font-size: 10px !important; }\n"},Pkq9:function(e,t){e.exports='<div class="modal-header padding-md-all">\n    <h5 style="padding-top:10px; padding-right:10px">\n        {{ selectedObsTaxonDetail?.nom_vern }} - {{ selectedObsTaxonDetail?.nom_valide }}\n    </h5>\n    <a target="_blank " href="https://inpn.mnhn.fr/espece/cd_nom/{{ selectedObsTaxonDetail?.cd_nom }} ">\n      <button class="btn btn-outline-dark"> Voir la fiche INPN du taxon </button>\n    </a>\n  <button  type="button" class="close" aria-label="Close" (click)="activeModal.dismiss(\'Cross click\')">\n    <span aria-hidden="true">&times;</span>\n  </button>\n\n</div>\n<div class="modal-body padding-md-all">\n  <div class="card " style="margin:0px; margin-bottom:10px;">\n    <div class="card-body padding-md-all ">\n      <div class="padding-sm col-xs-7 col-sm-7 col-md-7 col-lg-7 ">\n\n        <span class="font-xs">\n          <b> Observation de : </b> {{selectedObs?.observers}}\n\n          <br>\n          <span *ngIf="selectedObs?.date_min != selectedObs?.date_max; else elseBlock">\n            <b> Date : </b>{{selectedObs?.date_min}} -> {{selectedObs?.date_max}}\n          </span>\n          <ng-template #elseBlock>\n            <b> Date : </b>{{selectedObs?.date_min}}\n          </ng-template>\n          <br>\n\n          <b> Altitude</b> : {{selectedObs?.altitude_min}} m - {{selectedObs?.altitude_max}} m\n          <br>\n          <b> UUID observation : </b> {{selectedObs?.unique_id_sinp}}\n          <button *ngIf="oneObsSynthese?.url_source" class="btn btn-sm btn-primary" (click)="backToModule(oneObsSynthese?.url_source, oneObsSynthese?.entity_source_pk_value)">\n            <i class="fa fa-file-text" aria-hidden="true"></i> <small>Voir l\'observation dans le module de saisie\n            </small>\n          </button>\n        </span>\n\n        <div *ngIf="selectedObs?.areas> 0" class=" padding-sm col-xs-4 col-sm-4 col-md-4 col-lg-4">\n          <b> Autres espaces concern\xe9s par l\'observation</b>\n          <li *ngFor="let area of selectedObs?.areas"> {{area.area_name}} </li>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <ul class="nav nav-tabs" id="myTab" role="tablist">\n      <li class="nav-item">\n        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#infoObs" role="tab" aria-controls="home" aria-selected="true">Information observation</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" id="profile-tab" data-toggle="tab" href="#area" role="tab" aria-controls="profile" aria-selected="false">Zonages</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" id="profile-tab" data-toggle="tab" href="#historic" role="tab" aria-controls="profile" aria-selected="false">Historique de validation</a>\n      </li>\n  </ul>\n    <div class="tab-content" id="myTabContent">\n      <div class="tab-pane fade show active" id="infoObs" role="tabpanel" aria-labelledby="home-tab">\n\n          <div class="row">\n              <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">\n                <h5 class="underlined underlined-sm main-color"> M\xe9tadonn\xe9es </h5>\n\n                <table class="font-xs table table-striped table-sm">\n                  <tr>\n                    <td> Jeu de donn\xe9es </td>\n                    <td> {{selectedObs?.datasets?.dataset_name}} </td>\n                  </tr>\n                  <tr>\n                    <td> Cadre d\'acquisition </td>\n                    <td> {{selectedObs?.acquisition_framework.acquisition_framework_name}} </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Acteurs\n                    </td>\n                    <td>\n                      <ul>\n                        <li *ngFor="let act of selectedObs?.actors">\n                          {{act}}\n                        </li>\n                      </ul>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td> Module de provenance </td>\n                    <td> {{selectedObs?.source.name_source}} </td>\n                  </tr>\n                </table>\n\n              </div>\n              <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5">\n                <h5 class="underlined underlined-sm main-color"> D\xe9tail de l\'occurrence </h5>\n                <table class="font-xs table table-striped table-sm">\n                  <tr>\n                    <td> Statut de l\'observation </td>\n                    <td> {{selectedObs?.observation_status}} </td>\n                  </tr>\n                  <tr>\n                    <td> Technique d\'observation </td>\n                    <td> {{selectedObs?.obs_technique}} </td>\n                  </tr>\n                  <tr>\n                    <td> M\xe9thode d\'observation </td>\n                    <td> {{selectedObs?.obs_method}} </td>\n                  </tr>\n                  <tr>\n                    <td> Etat biologique </td>\n                    <td> {{selectedObs?.bio_condition}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Statut biologique </td>\n                    <td> {{selectedObs?.bio_status}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Sexe </td>\n                    <td> {{selectedObs?.sex}} </td>\n                  </tr>\n                  <tr>\n                    <td> Stade de vie </td>\n                    <td> {{selectedObs?.life_stage}} </td>\n                  </tr>\n                  <tr>\n                    <td> Denombrement min </td>\n                    <td> {{selectedObs?.count_min}} </td>\n                  </tr>\n                  <tr>\n                    <td> Denombrement max </td>\n                    <td> {{selectedObs?.count_max}} </td>\n                  </tr>\n                  <tr>\n                    <td> Type de d\xe9nombrement </td>\n                    <td> {{selectedObs?.type_count}} </td>\n                  </tr>\n                  <tr>\n                    <td> Objet du d\xe9nombrement </td>\n                    <td> {{selectedObs?.obj_count}} </td>\n                  </tr>\n                  <tr>\n                  <tr>\n                    <td> Naturalit\xe9 </td>\n                    <td> {{selectedObs?.naturalness}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Commentaire relev\xe9 </td>\n                    <td> {{selectedObs?.comment_context}} </td>\n                  </tr>\n                  <tr>\n                    <td> Commentaire occurrence </td>\n                    <td> {{selectedObs?.comment_description}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Determinateur </td>\n                    <td> {{selectedObs?.determiner}} </td>\n                  </tr>\n                  <tr>\n                    <td> Preuve d\'existance </td>\n                    <td> {{selectedObs?.exist_proof}} </td>\n                  </tr>\n                  <tr>\n                    <td> Preuve num\xe9rique </td>\n                    <td> {{selectedObs?.digital_proof}} </td>\n                  </tr>\n                  <tr>\n                    <td> Preuve non num\xe9rique </td>\n                    <td> {{selectedObs?.non_digital_proof}} </td>\n                  </tr>\n                  <tr>\n                    <td> Echantillon de preuve </td>\n                    <td> {{selectedObs?.sample_number_proof}} </td>\n                  </tr>\n                  <tr>\n\n                  <tr>\n                    <td> Type de regroupement </td>\n                    <td> {{selectedObs?.grp_typ}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Source de la donn\xe9e </td>\n                    <td> {{selectedObs?.source_status}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Statut de validation </td>\n                    <td> {{selectedObs?.valid_status}} </td>\n                  </tr>\n\n                  <tr>\n                    <td> Sensibilit\xe9 </td>\n                    <td> {{selectedObs?.sensitivity}} </td>\n                  </tr>\n                  <tr>\n                    <td> Niveau de diffusion </td>\n                    <td> {{selectedObs?.diffusion_level}} </td>\n                  </tr>\n                  <tr>\n                    <td> Nature de l\'objet g\xe9ographique </td>\n                    <td> {{selectedObs?.nat_obj_geo}} </td>\n                  </tr>\n                  <tr>\n                    <td> Floutage </td>\n                    <td> {{selectedObs?.blurring}} </td>\n                  </tr>\n                  <tr>\n                    <td> Identifiant unique SINP </td>\n                    <td> {{selectedObs?.unique_id_sinp}} </td>\n                  </tr>\n                </table>\n\n              </div>\n\n\n              <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3">\n\n                <h5 class="underlined underlined-sm main-color"> Taxonomie </h5>\n\n                <table class="font-xs table table-striped table-sm">\n\n                  <tr>\n                    <td>\n                      <b>Groupe taxonomique </b>\n                    </td>\n                    <td> {{ selectedObsTaxonDetail?.classe }} </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <b>Ordre</b>\n                    </td>\n                    <td> {{ selectedObsTaxonDetail?.ordre }} </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <b> Famille</b>\n                    </td>\n                    <td> {{ selectedObsTaxonDetail?.famille }} </td>\n                  </tr>\n                </table>\n\n                <h5 class="underlined  underlined-sm main-color"> Attribut(s) Taxonomique(s) locaux </h5>\n                <table class="table table-striped table-sm">\n                  <tr class="font-xs" *ngFor="let attr of selectObsTaxonInfo?.attributs">\n                    <td> <b>{{attr.label_attribut}} </b> </td>\n                    <td> {{attr.valeur_attribut}} </td>\n                  </tr>\n                </table>\n\n\n                <h5 class="underlined underlined-sm main-color"> R\xe9glementation</h5>\n                <table class="font-xs table table-striped table-sm">\n\n                  <tr *ngFor="let arrete of selectedObsTaxonDetail?.statuts_protection">\n                    <td>\n                      <a [href]="arrete.url"> {{arrete.intitule}} </a>\n                    </td>\n                  </tr>\n                </table>\n\n                \x3c!-- CARTE INPN --\x3e\n                \x3c!-- <object [data]="sanitizer.bypassSecurityTrustResourceUrl(inpnMapUrl)" type="image/svg+xml" width="90%" height="90%">\n                <param name="src" value="/cartosvg/couchegeo/repartition/atlas/{{selectedObs?.cd_nom}}/fr_light_l93,fr_light_mer_l93,fr_lit_l93">\n                <param name="type" value="image/svg+xml">\n                <param name="pluginspage" value="http://www.adobe.com/svg/viewer/install/">\n              </object> --\x3e\n\n              </div>\n\n\n            </div>\n      </div>\n      <div class="tab-pane fade" id="historic" role="tabpanel" aria-labelledby="profile-tab">\n\n        <table class="table table-striped">\n            <thead>\n                <tr>\n                  <th class="table_date"> Date de validation </th>\n                  <th class="table_status"> Statut </th>\n                  <th class="table_comment"> Validateur </th>\n                  <th class="table_comment"> Commentaire </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <tr *ngFor="let row of selectedObs?.validations">\n                  <td> {{row.validation_date | date:\'dd-MM-yyyy\'}} </td>\n                  <td> {{row.validation_label.label_default}} </td>\n                  <td> <span *ngIf="row.validator_role; else elseBlock">\n                      {{row.validator_role.prenom_role}} {{row.validator_role.prenom_role}}\n                      </span>\n                    <ng-template #elseBlock> Validation automatique </ng-template>\n                  </td>\n                  <td> {{row.validation_comment}} </td>\n                </tr>\n              </tbody>\n        </table>\n      </div>\n      <div class="tab-pane fade" id="area" role="tabpanel" aria-labelledby="profile-tab">\n\n        <table class="table table-striped">\n            <thead>\n                <tr>\n                  <th class="table_date"> Type de zonage </th>\n                  <th class="table_comment"> Zones </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <tr *ngFor="let area_type of formatedAreas">\n                  <td>\n                    {{ area_type.area_type }}\n                  </td>\n                  <td>\n                      <span *ngFor="let area of area_type.areas; let index = index">\n                          {{area.area_name}}<span *ngIf="index < area_type.areas.length -1 ">,</span>\n                      </span>\n\n                  </td>\n                </tr>\n              </tbody>\n        </table>\n      </div>\n      \x3c!-- <b> Commune(s) </b> :\n      <span *ngFor="let mun of selectedObs?.municipalities; let i = index">\n        {{ mun.area_name}} <span *ngIf="i !== selectedObs?.municipalities.length -1"> - </span>\n      </span>\n      <br> --\x3e\n\n    </div>\n\n\n\n\n\n</div>\n'},Tkwf:function(e,t){e.exports='<pnx-map height="92vh" class="map-card">\n  <pnx-leaflet-filelayer\n   (onLoad)="onFileLayerLoaded($event)"\n   [removeLayer]="currentLeafletDrawCoord"\n   [style]="{\'color\': \'green\'}"\n   ></pnx-leaflet-filelayer>\n  <pnx-leaflet-draw\n    [options]="leafletDrawOptions"\n    [zoomLevel]="1"\n    (layerDrawed)="bindGeojsonForm($event)"\n    (layerDeleted)="deleteControlValue()"\n  >\n  </pnx-leaflet-draw>\n</pnx-map>\n'},awRN:function(e,t,n){"use strict";n.r(t);var a=n("mrSG"),s=n("CcnG"),o=n("Ip0R"),i=n("ZYCi"),r=n("yYhs"),d=n("WSZi"),l=n("hWDh"),c=n("5nLG"),p=function(){function e(){}return e=a.c([Object(s.Injectable)(),a.f("design:paramtypes",[])],e)}(),b=n("e9I2"),u=n("jAWr"),m=n("qOYx"),h=n("cxV9"),f=n("bkLN"),g=n("5weA"),v=n("4GxJ"),y=n("t/Na"),S=function(){function e(e,t,n,a){this.activeModal=e,this._dataService=t,this._storeService=n,this._configService=a,this.tooManyObs=!1}return e.prototype.ngOnInit=function(){},e.prototype.downloadObservations=function(e){this._dataService.downloadObservations(this._storeService.idSyntheseList,e)},e.prototype.downloadTaxons=function(e,t){this._dataService.downloadTaxons(this._storeService.idSyntheseList,e,t)},e.prototype.downloadStatusOrMetadata=function(e,t){this.queryString=this.queryString.delete("limit"),this._dataService.downloadStatusOrMetadata(this._configService.getSettings("API_ENDPOINT")+"/"+e,"csv",this.queryString,t)},a.c([Object(s.Input)(),a.f("design:type",y.HttpParams)],e.prototype,"queryString",void 0),a.c([Object(s.Input)(),a.f("design:type",Object)],e.prototype,"tooManyObs",void 0),e=a.c([Object(s.Component)({selector:"pnx-synthese-modal-download",template:n("6wUY")}),a.f("design:paramtypes",[v.a,h.a,p,l.c])],e)}(),_=n("SZbH"),x=function(){function e(e,t,n,a,s,o,i,r){this.searchService=e,this._mapListService=t,this._commonService=n,this._modalService=a,this._fs=s,this._syntheseStore=o,this._toasterService=i,this._configService=r,this.searchBarHidden=!1,this.firstLoad=!0}return e.prototype.loadAndStoreData=function(e){var t=this;this.searchService.dataLoaded=!1,this.searchService.getSyntheseData(e).subscribe(function(e){if(e.nb_obs_limited){var n=t._modalService.open(S,{size:"lg"}),a=t._fs.formatParams();n.componentInstance.queryString=t.searchService.buildQueryUrl(a),n.componentInstance.tooManyObs=!0}t._mapListService.geojsonData=e.data,t._mapListService.tableData=e.data,t._mapListService.loadTableData(e.data),t._mapListService.idName="id",t.searchService.dataLoaded=!0,t._syntheseStore.idSyntheseList=e.data.features.map(function(e){return e.properties.id})},function(e){t.searchService.dataLoaded=!0,403!==e.status&&t._commonService.translateToaster("error","ErrorMessage")}),this.firstLoad&&this._toasterService.info("Les "+this._configService.getSettings("SYNTHESE.NB_LAST_OBS")+" derni\xe8res observations de la synth\xe8se",""),this.firstLoad=!1},e.prototype.ngOnInit=function(){this._fs.searchForm.reset(),this._fs.selectedCdRefFromTree=[],this._fs.selectedTaxonFromRankInput=[],this._fs.selectedtaxonFromComponent=[];var e={limit:this._configService.getSettings("SYNTHESE.NB_LAST_OBS")};this.loadAndStoreData(e)},e.prototype.mooveButton=function(){this.searchBarHidden=!this.searchBarHidden},e.prototype.closeInfo=function(e){e.hidden=!0},e=a.c([Object(s.Component)({selector:"pnx-synthese",template:n("1yF2"),providers:[f.a],styles:[n("hZ56")]}),a.f("design:paramtypes",[h.a,f.a,g.a,v.c,u.a,p,_.b,l.c])],e)}(),O=n("4R65"),w=n("ZYjt"),L=n("y9jh"),T=n("yc7q"),D=function(){function e(e,t,n,a){this._gnDataService=e,this._dataService=t,this.activeModal=n,this._configService=a,this.formatedAreas=[]}return e.prototype.ngOnInit=function(){this.loadOneSyntheseReleve(this.oneObsSynthese)},e.prototype.loadOneSyntheseReleve=function(e){var t=this;this._dataService.getOneSyntheseObservation(e.id).subscribe(function(e){t.selectedObs=e,t.selectedObs.municipalities=[],t.selectedObs.other_areas=[],t.selectedObs.actors=t.selectedObs.actors.split("|");var n={};for(var a in t.selectedObs.areas.forEach(function(e){n[e.area_type.type_name]?n[e.area_type.type_name].push(e):n[e.area_type.type_name]=[e]}),n)t.formatedAreas.push({area_type:a,areas:n[a]})}),this._gnDataService.getTaxonAttributsAndMedia(e.cd_nom,this._configService.getSettings("SYNTHESE.ID_ATTRIBUT_TAXHUB")).subscribe(function(e){t.selectObsTaxonInfo=e}),this._gnDataService.getTaxonInfo(e.cd_nom).subscribe(function(e){t.selectedObsTaxonDetail=e})},e.prototype.backToModule=function(e,t){window.open(e+"/"+t,"_blank")},a.c([Object(s.Input)(),a.f("design:type",Object)],e.prototype,"oneObsSynthese",void 0),e=a.c([Object(s.Component)({selector:"pnx-synthese-modal-info-obs",template:n("Pkq9")}),a.f("design:paramtypes",[T.a,h.a,v.a,l.c])],e)}(),k=n("l3zb"),M=function(){function e(e,t,n,a,s,o,i,r,d){this.mapListService=e,this._ds=t,this.ngbModal=n,this._commonService=a,this._fs=s,this.sanitizer=o,this.ref=i,this._cruvedStore=r,this._configService=d}return e.prototype.ngOnInit=function(){var e=this,t=document.documentElement.clientHeight;this.rowNumber=Math.trunc(t/37),this.mapListService.onMapClik$.subscribe(function(t){e.mapListService.selectedRow=[];var n,a=parseInt(t);for(n=0;n<e.mapListService.tableData.length;n++)if(e.mapListService.tableData[n].id===a){e.mapListService.selectedRow.push(e.mapListService.tableData[n]);break}var s=Math.trunc(n/e.rowNumber);e.table.offset=s})},e.prototype.ngAfterContentChecked=function(){this.table&&this.table.element.clientWidth!==this._latestWidth&&(this._latestWidth=this.table.element.clientWidth,this.searchBarHidden&&(this.table.recalculate(),this.ref.markForCheck()))},e.prototype.onResize=function(e){this.rowNumber=Math.trunc(e.target.innerHeight/37)},e.prototype.dateComparator=function(e,t){return new Date(e)<new Date(t)?-1:new Date(e)>new Date(t)?1:void 0},e.prototype.backToModule=function(e,t){var n=document.createElement("a");n.target="_blank",n.href=e+"/"+t,n.setAttribute("visibility","hidden"),document.body.appendChild(n),n.click(),n.remove()},e.prototype.getQueryString=function(){var e=this._fs.formatParams();return this._ds.buildQueryUrl(e)},e.prototype.openInfoModal=function(e){this.ngbModal.open(D,{size:"lg",windowClass:"large-modal"}).componentInstance.oneObsSynthese=e},e.prototype.openDownloadModal=function(){var e=this.ngbModal.open(S,{size:"lg"}),t=this.getQueryString();this._fs.searchForm.pristine&&(t=t.set("limit",this._configService.getSettings("SYNTHESE.NB_LAST_OBS").toString())),e.componentInstance.queryString=t},e.prototype.getRowClass=function(){return"row-sm clickable"},e.prototype.ngOnChanges=function(e){e.inputSyntheseData&&e.inputSyntheseData.currentValue&&(this.table.offset=0)},a.c([Object(s.Input)(),a.f("design:type",Boolean)],e.prototype,"searchBarHidden",void 0),a.c([Object(s.Input)(),a.f("design:type",O.GeoJSON)],e.prototype,"inputSyntheseData",void 0),a.c([Object(s.ViewChild)("table"),a.f("design:type",L.DatatableComponent)],e.prototype,"table",void 0),a.c([Object(s.HostListener)("window:resize",["$event"]),a.f("design:type",Function),a.f("design:paramtypes",[Object]),a.f("design:returntype",void 0)],e.prototype,"onResize",null),e=a.c([Object(s.Component)({selector:"pnx-synthese-list",template:n("rq1c"),styles:[n("Or1R")]}),a.f("design:paramtypes",[f.a,h.a,v.c,g.a,u.a,w.DomSanitizer,s.ChangeDetectorRef,k.a,l.c])],e)}(),E=n("4NfF"),C=function(){function e(e,t,n,a,s){this.mapListService=e,this._ms=t,this.formService=n,this._commonService=a,this._configService=s,this.leafletDrawOptions=E.a,this.firstFileLayerMessage=!0,this.originStyle={color:"#3388ff",fill:!1,weight:3},this.selectedStyle={color:"#ff0000",weight:3,fill:!1}}return e.prototype.ngOnInit=function(){this.cluserOrSimpleFeatureGroup=this._configService.getSettings("SYNTHESE.ENABLE_LEAFLET_CLUSTER")?O.markerClusterGroup():new O.FeatureGroup,this.leafletDrawOptions.draw.rectangle=!0,this.leafletDrawOptions.draw.circle=!0,this.leafletDrawOptions.draw.polyline=!1,this.leafletDrawOptions.edit.remove=!0},e.prototype.ngAfterViewInit=function(){var e=this;this.mapListService.onTableClick$.subscribe(function(t){var n=e.mapListService.layerDict[t];e.toggleStyle(n),e.mapListService.zoomOnSelectedLayer(e._ms.map,n)}),this.cluserOrSimpleFeatureGroup.addTo(this._ms.map)},e.prototype.toggleStyle=function(e){void 0!==this.mapListService.selectedLayer&&this.mapListService.selectedLayer.setStyle(this.originStyle),this.mapListService.selectedLayer=e,this.mapListService.selectedLayer.setStyle(this.selectedStyle)},e.prototype.eventOnEachFeature=function(e,t){var n=this;this.mapListService.layerDict[e]=t,t.on({click:function(a){n.toggleStyle(t),n.mapListService.mapSelected.next(e)}})},e.prototype.bindGeojsonForm=function(e){this.formService.searchForm.controls.radius.setValue(e.properties.radius),this.formService.searchForm.controls.geoIntersection.setValue(e),this.currentLeafletDrawCoord=e},e.prototype.onFileLayerLoaded=function(e){this.formService.searchForm.controls.geoIntersection.setValue(e),this.firstFileLayerMessage&&this._commonService.translateToaster("success","Map.FileLayerInfoSynthese"),this.firstFileLayerMessage=!1},e.prototype.deleteControlValue=function(){this.formService.searchForm.controls.geoIntersection.reset(),this.formService.searchForm.controls.radius.reset()},e.prototype.setStyle=function(e){e.setStyle({color:"#3388ff",weight:3,fill:!1})},e.prototype.coordsToLatLng=function(e){return new O.LatLng(e[1],e[0])},e.prototype.setStyleEventAndAdd=function(e,t){this.setStyle(e),this.eventOnEachFeature(t,e),this.cluserOrSimpleFeatureGroup.addLayer(e)},e.prototype.ngOnChanges=function(e){var t=this;if(this._ms.map&&this._ms.map.removeLayer(this.cluserOrSimpleFeatureGroup),e&&e.inputSyntheseData.currentValue&&(this.cluserOrSimpleFeatureGroup=this._configService.getSettings("SYNTHESE.ENABLE_LEAFLET_CLUSTER")?O.markerClusterGroup():new O.FeatureGroup,e.inputSyntheseData.currentValue.features.forEach(function(e){if("Point"===e.type||"MultiPoint"===e.type){"Point"===e.type&&(e.coordinates=[e.coordinates]);for(var n=0;n<e.coordinates.length;n++){var a=O.GeoJSON.coordsToLatLng(e.coordinates[n]);t.setStyleEventAndAdd(O.circleMarker(a),e.properties.id)}}else if("Polygon"===e.type||"MultiPolygon"===e.type){a=O.GeoJSON.coordsToLatLngs(e.coordinates,"Polygon"===e.type?1:2);t.setStyleEventAndAdd(new O.Polygon(a),e.properties.id)}else if("LineString"==e.type||"MultiLineString"===e.type){a=O.GeoJSON.coordsToLatLngs(e.coordinates,"LineString"===e.type?0:1);t.setStyleEventAndAdd(new O.Polyline(a),e.properties.id)}}),this._ms.map.addLayer(this.cluserOrSimpleFeatureGroup),void 0!==e.inputSyntheseData.previousValue))try{this._ms.map.fitBounds(this.cluserOrSimpleFeatureGroup.getBounds())}catch(n){console.log("no layer in feature group")}},a.c([Object(s.Input)(),a.f("design:type",O.GeoJSON)],e.prototype,"inputSyntheseData",void 0),e=a.c([Object(s.Component)({selector:"pnx-synthese-carte",template:n("Tkwf"),providers:[],styles:[n("4t9a")]}),a.f("design:paramtypes",[f.a,c.a,u.a,g.a,l.c])],e)}();n.d(t,"SyntheseModule",function(){return F});var I=[{path:"",component:x}],F=function(){function e(){}return e=a.c([Object(s.NgModule)({imports:[i.RouterModule.forChild(I),d.a,o.CommonModule,r.b.forRoot(),l.b.forChild()],declarations:[x,M,C,S,D],entryComponents:[S,D],providers:[c.a,b.a,m.a,p,u.a]})],e)}()},hZ56:function(e,t){e.exports=".is-loading {\n  display: none; }\n\n.background-topo {\n  background: url('fond-topo.414f74e6c46469bffc9a.png');\n  background-size: 200px; }\n\n.wrapper {\n  display: flex;\n  width: 100%;\n  align-items: stretch;\n  background-color: white; }\n\n@media (min-width: 1000px) {\n  #sidebar {\n    width: 250px; }\n  #sidebar.active {\n    margin-left: -250px; } }\n\n@media (min-width: 1200px) {\n  #sidebar {\n    width: 300px; }\n  #sidebar.active {\n    margin-left: -300px; } }\n\n@media (min-width: 1500px) {\n  #sidebar {\n    width: 350px; }\n  #sidebar.active {\n    margin-left: -350px; } }\n\n.btn-toogle-sidenav {\n  z-index: 10000;\n  position: absolute;\n  padding: 0px 5px;\n  padding: 0px 5px;\n  border-bottom-left-radius: 0px;\n  border-top-left-radius: 0px; }\n\n.btn-toogle-sidenav:focus {\n  box-shadow: 4px 5px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19) !important; }\n\n#sidebar.active .btn-toogle-sidenav {\n  z-index: 10000;\n  position: absolute;\n  left: 0px;\n  padding: 0px 5px;\n  padding: 0px 5px;\n  border-bottom-left-radius: 0px;\n  border-top-left-radius: 0px; }\n\n.page-content {\n  width: 100%; }\n\na[data-toggle='collapse'] {\n  position: relative; }\n\n.dropdown-toggle::after {\n  display: block;\n  position: absolute;\n  top: 50%;\n  right: 20px;\n  transform: translateY(-50%); }\n"},rq1c:function(e,t){e.exports='\x3c!--Table--\x3e\n<ngx-datatable \n  (window:resize)="onResize($event)" \n  #table \n  class="material striped margin-top-xs table-size expandable"\n  [rows]="mapListService.tableData" \n  columns="\'{{SYNTHESE.LIST_COLUMNS_FRONTEND\' | config}}" \n  [columnMode]="\'force\'"\n  [headerHeight]="50" \n  [footerHeight]="35" \n  [selected]="mapListService.selectedRow" \n  [selectionType]="\'single\'" \n  [count]="mapListService.tableData.length"\n  [limit]="rowNumber" \n  [rowClass]="getRowClass" \n  (select)="mapListService.onRowSelect($event)"\n>\n\n\n  <ngx-datatable-column [maxWidth]="5">\n    <ng-template let-row="row" ngx-datatable-cell-template>\n      <button class="btn btn-outline-shadow btn-no-padding btn-ghost" (click)="openInfoModal(row);">\n        <i #iElement matTooltip="{{row[mapListService.idName]}}" class="fa fa-info-circle" aria-hidden="true "></i>\n      </button>\n    </ng-template>\n  </ngx-datatable-column>\n\n  <ngx-datatable-column [maxWidth]="5">\n    <ng-template let-row="row" ngx-datatable-cell-template>\n      <button *ngIf="row.url_source" class="btn btn-outline-shadow btn-no-padding btn-ghost" (click)="backToModule(row.url_source, row.entity_source_pk_value)">\n        <i matTooltip="Voir l\'observation dans le module de saisie" class="fa fa-file-text" aria-hidden="true"></i>\n      </button>\n    </ng-template>\n  </ngx-datatable-column>\n\n\n  \x3c!-- DATA COLOMNS --\x3e\n  <div *ngFor="let col of \'SYNTHESE.LIST_COLUMNS_FRONTEND\' |json ">\n    \x3c!-- custom columns for date in order to format them and order them --\x3e\n    <span *ngIf="col.prop == \'date_max\' || col.prop == \'date_min\'; else notDate">\n        <ngx-datatable-column\n          [comparator]="dateComparator"\n          [maxWidth]="col.max_width" \n          [name]=\'col.name\' \n          [prop]=\'col.prop\' \n          [sortable]="true">\n            <ng-template let-row="row" ngx-datatable-cell-template>\n              {{row[col.prop] | date:\'dd-MM-yyyy\'}}\n            </ng-template>\n        </ngx-datatable-column>\n    </span>\n    <ng-template #notDate>\n        <ngx-datatable-column  [name]="col.name " [prop]="col.prop"\n        [maxWidth]="col.max_width">\n      </ngx-datatable-column>\n    </ng-template>\n  </div>\n\n</ngx-datatable>\n\n\n\n\n<button \n  type="button" \n  class="btn btn-primary btn-sm box-shadow" \n  id="download-btn" \n  (click)="openDownloadModal()"\n  [disabled]="_cruvedStore.cruved?.SYNTHESE?.cruved?.E == \'0\'"\n  >\n  <i class="fa fa-download" aria-hidden="true"> </i>\n  T\xe9l\xe9chargement\n</button>\n\n\n\x3c!-- <pnx-modal-download [pathDownload]="exportRoute " [queryString]="queyrStringDownload " [exportFormat]="SYNTHESE_CONFIG.EXPORT_FORMAT "\n  (buttonClicked)="setQueryString() ">\n\n</pnx-modal-download> --\x3e\n\n\x3c!-- MODAL INFO OBS --\x3e\n<ng-template #modalInfoObs let-c="close " let-d="dismiss">\n  <pnx-synthese-modal-info-obs></pnx-synthese-modal-info-obs>\n</ng-template>\n'}}]);